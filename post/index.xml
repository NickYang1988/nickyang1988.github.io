<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on C&#43;&#43;爱好者博客</title>
    <link>https://cppfans.org/post/</link>
    <description>Recent content in Posts on C&#43;&#43;爱好者博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 04 Jun 2018 03:27:17 +0000</lastBuildDate>
    
	<atom:link href="https://cppfans.org/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>关于WebSocket的一些总结</title>
      <link>https://cppfans.org/2247.html</link>
      <pubDate>Mon, 04 Jun 2018 03:27:17 +0000</pubDate>
      
      <guid>https://cppfans.org/2247.html</guid>
      <description>WebSocket下面简称ws ws出现之前的http连接 在ws出现以前，http都是客户端发起-服务器回应的模式，全靠客户端主动交流，服务器</description>
    </item>
    
    <item>
      <title>接口设计六大原则</title>
      <link>https://cppfans.org/2245.html</link>
      <pubDate>Fri, 25 May 2018 04:41:52 +0000</pubDate>
      
      <guid>https://cppfans.org/2245.html</guid>
      <description>一. 单一职责原则 Single Responsibility Principle, 简称SRP。 定义 There should never be more than one reason for a class to change 应该有且仅有一个原因引起类的变 准则 职责的划分？单一的定义和级别？ 应该根据实际</description>
    </item>
    
    <item>
      <title>Unity3D 2017.x Failed to start Unity Package Manager</title>
      <link>https://cppfans.org/2233.html</link>
      <pubDate>Mon, 05 Feb 2018 06:34:18 +0000</pubDate>
      
      <guid>https://cppfans.org/2233.html</guid>
      <description>升级到U3D 2017.x后，发现打开任何工程都会卡在Starting server处，经查看Editor.log后发现，是重试了几次后超时了，</description>
    </item>
    
    <item>
      <title>ArkGameFrame开源跨平台游戏服务器框架0.2.0版本发布</title>
      <link>https://cppfans.org/2224.html</link>
      <pubDate>Thu, 16 Nov 2017 06:39:03 +0000</pubDate>
      
      <guid>https://cppfans.org/2224.html</guid>
      <description>各位朋友好，ArkGameFrame 0.2.0 版本发布了，Ark 是一个游戏服务器框架，主要提供了抽象的数据组织结构和通用的服务器架构，主要特性包括：</description>
    </item>
    
    <item>
      <title>说说协程coroutine</title>
      <link>https://cppfans.org/2217.html</link>
      <pubDate>Sun, 07 May 2017 06:06:44 +0000</pubDate>
      
      <guid>https://cppfans.org/2217.html</guid>
      <description>&lt;p&gt;近几年来，协程的概念和使用被越多越多的人提到了，确实帮助很多人解决了很多问题，例如网络上的问题，异步逻辑流程控制等。我的工作中也接触到一些，所以打算总结下。&lt;/p&gt;

&lt;p&gt;简单来说，协程就是一种用户态、编程语言层面的轻量级线程。&lt;/p&gt;

&lt;p&gt;然而线程与协程又有很多差异的地方，线程是靠操作系统OS本身来调度，是抢占式的任务处理方式，谁抢到算谁的，所以大部分多线程程序中都要单独调用sleep来让出CPU给其他线程；线程每次阻塞、切换时都需要系统调用system call，然后调用调度函数来决定运行哪一个线程；协程拥有自己的用户态的上下文和栈(&lt;span style=&#34;color: #808080;&#34;&gt;&lt;em&gt;分为stackless和stackfulness，这个下一篇文章来讲&lt;/em&gt;&lt;/span&gt;)，协程切换时，先将寄存器上下文和栈内容保存起来，再次切换回来的时候再恢复之前保存的内容继续运行；&lt;/p&gt;

&lt;p&gt;通过上面的讲解，明白了一个道理，协程是编译器来保证的，线程是操作系统来调度的；协程能更好的保证流程，而线程需要仔细处理公共数据资源；协程本质是单线程的，能提高单个CPU core的性能，适合计算密集型的应用；协程切换非常轻量，所以能大量的使用，线程切换成本较高，一般要控制线程数。&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;协程的概念和原理明白了后，其实有点类似于异步事件驱动，可以看看libevent/libuv等经典的C语言库，发现大量使用了异步事件回调，有一个event_loop来循环检查要处理的事件，不过就是代码相对协程恶心了一些，协程能让用户以类似同步的方式来处理异步流程，更加便于理解。&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;不过协程也是有缺点的，无法利用现代多核机器的性能，所以还需要配合多进程来提高性能；有阻塞操作的时候依然会阻塞整个进程，需要用其他方式来解决。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>我为什么离开MK</title>
      <link>https://cppfans.org/2203.html</link>
      <pubDate>Thu, 09 Mar 2017 08:11:48 +0000</pubDate>
      
      <guid>https://cppfans.org/2203.html</guid>
      <description>近半年都没发过文章了，工作比较忙，自己也懒得写。近期因为我辞职在家休息，有了一个短暂的空闲期，所以打算总结下这一段时间的收获。 先说说工作上的</description>
    </item>
    
    <item>
      <title>[转]并发编程：Actors模型和CSP模型</title>
      <link>https://cppfans.org/2176.html</link>
      <pubDate>Mon, 17 Oct 2016 10:01:30 +0000</pubDate>
      
      <guid>https://cppfans.org/2176.html</guid>
      <description>&lt;h3 id=&#34;section-1&#34;&gt;一、前言&lt;/h3&gt;

&lt;p&gt;不同的编程模型与具体的语言无关，大部分现代语言都可以通过巧妙地结构处理实现不同的模型.杂谈的意思是很杂，想到哪儿写到哪儿，不对正确性负责 :D.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h3 id=&#34;actors&#34;&gt;二、Actors模型&lt;/h3&gt;

&lt;p&gt;传统的并发模型主要由两种实现的形式，一是同一个进程下，多个线程天然的共享内存，由程序对读写做同步控制(有锁或无锁). 二是多个进程通过进程间通讯或者内存映射实现数据的同步.&lt;/p&gt;

&lt;p&gt;Actors模型更多的使用消息机制来实现并发，目标是让开发者不再考虑线程这种东西，&lt;strong&gt;每个Actor最多同时只能进行一样工作，Actor内部可以有自己的变量和数据&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Actors模型避免了由操作系统进行任务调度的问题，在操作系统进程之上，多个Actor可能运行在同一个进程(或线程)中.这就节省了大量的Context切换.&lt;/p&gt;

&lt;p&gt;在Actors模型中，每个Actor都有一个专属的命名”邮箱”, 其他Actor可以随时选择一个Actor通过邮箱收发数据,对于“邮箱”的维护，通常是使用发布订阅的机制实现的，比如我们可以定义发布者是自己，订阅者可以是某个Socket接口，另外的消息总线或者直接是目标Actor.&lt;/p&gt;

&lt;p&gt;目前akka库是比较流行的Actors编程模型实现，支持Scala和Java语言.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h3 id=&#34;csp&#34;&gt;三、CSP模型&lt;/h3&gt;

&lt;p&gt;CSP(Communicating Sequential Process)模型提供一种多个进程公用的“管道(channel)”, 这个channel中存放的是一个个”任务”.&lt;/p&gt;

&lt;p&gt;目前正流行的go语言中的goroutine就是参考的CSP模型，原始的CSP中channel里的任务都是立即执行的，而go语言为其增加了一个缓存，即任务可以先暂存起来，等待执行进程准备好了再逐个按顺序执行.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h3 id=&#34;cspactor&#34;&gt;四、CSP和Actor的区别&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;CSP进程通常是同步的(即任务被推送进Channel就立即执行，如果任务执行的线程正忙，则发送者就暂时无法推送新任务)，Actor进程通常是异步的(消息传递给Actor后并不一定马上执行).&lt;/li&gt;
&lt;li&gt;CSP中的Channel通常是匿名的, 即任务放进Channel之后你并不需要知道是哪个Channel在执行任务，而Actor是有“身份”的，你可以明确的知道哪个Actor在执行任务.&lt;/li&gt;
&lt;li&gt;在CSP中，我们只能通过Channel在任务间传递消息, 在Actor中我们可以直接从一个Actor往另一个Actor传输数据.&lt;/li&gt;
&lt;li&gt;CSP中消息的交互是同步的，Actor中支持异步的消息交互.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h3 id=&#34;section-2&#34;&gt;五、参考文档&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/22621514/is-scalas-actors-similar-to-gos-coroutines&#34; target=&#34;_blank&#34;  rel=&#34;nofollow&#34; &gt;Scala中的actors和Go中的goroutines对比&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Communicating_sequential_processes#Comparison_with_the_Actor_Model&#34; target=&#34;_blank&#34;  rel=&#34;nofollow&#34; &gt;CSP Model From Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;文章转载自：&lt;a href=&#34;http://sobuhu.com/program/2014/09/07/concurrent-models.html&#34;&gt;http://sobuhu.com/program/2014/09/07/concurrent-models.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ArkGameFrame实战系列文章说明</title>
      <link>https://cppfans.org/2171.html</link>
      <pubDate>Mon, 12 Sep 2016 09:10:00 +0000</pubDate>
      
      <guid>https://cppfans.org/2171.html</guid>
      <description>ArkGameFrame是一个面向中小型企业的开源游戏服务器敏捷开发框架，继承自NFrame，主要是项目的管理方式不同，这块经过沟通，很难有</description>
    </item>
    
    <item>
      <title>[转]高并发性能调试经验分享</title>
      <link>https://cppfans.org/2167.html</link>
      <pubDate>Wed, 31 Aug 2016 02:41:38 +0000</pubDate>
      
      <guid>https://cppfans.org/2167.html</guid>
      <description>作者：helloworlds 链接：https://zhuanlan.zhihu.com/p/21348220 来源：知乎 著作权归作者所有。商业</description>
    </item>
    
    <item>
      <title>Jason Bourne 5观影感</title>
      <link>https://cppfans.org/2162.html</link>
      <pubDate>Fri, 26 Aug 2016 03:48:06 +0000</pubDate>
      
      <guid>https://cppfans.org/2162.html</guid>
      <description>自从07年第三部结束后，我一直都在等待《谍影重重》后续的电影，到了4，发现不是马特达蒙演的，而且剧情只是因为跟绊脚石计划都一些关联，所以非常</description>
    </item>
    
    <item>
      <title>A simple Spark test project</title>
      <link>https://cppfans.org/2142.html</link>
      <pubDate>Wed, 10 Aug 2016 12:31:10 +0000</pubDate>
      
      <guid>https://cppfans.org/2142.html</guid>
      <description>I start to learn Spark to process some log files, here is a simple example. How to build Spark, please see http://spark.apache.org/docs/latest/building-spark.html Scala file import org.apache.spark.SparkContext import org.apache.spark.SparkContext._ import org.apache.spark.SparkConf object SimpleApp { def main(args: Array[String]) { val conf = new SparkConf().setAppName(&#34;wordCount&#34;) val sc = new SparkContext(conf) val input = sc.textFile(&#34;/home/nickyang/develop/spark/spark-1.6.1/README.md&#34;) val words = input.flatMap(line =&amp;gt; line.split(&#34; &#34;)) val couts = words.map(word =&amp;gt; (word, 1)).reduceByKey{case (x, y) =&amp;gt; x +</description>
    </item>
    
    <item>
      <title>尽量减少与低情商人群交流</title>
      <link>https://cppfans.org/2139.html</link>
      <pubDate>Thu, 04 Aug 2016 08:20:59 +0000</pubDate>
      
      <guid>https://cppfans.org/2139.html</guid>
      <description>好久没有更新博客了，最近一直忙于搬家和新项目的事情，每天感觉无比心累，主要更多的还是跟人打交道上。故随意写了这一篇文章。 先摘录一段从网上关于</description>
    </item>
    
    <item>
      <title>[转]你闺女也能看懂的插画版Kubernetes指南</title>
      <link>https://cppfans.org/2133.html</link>
      <pubDate>Mon, 04 Jul 2016 06:53:36 +0000</pubDate>
      
      <guid>https://cppfans.org/2133.html</guid>
      <description>编者按：Matt Butcher是Deis的平台架构师，热爱哲学，咖啡和精雕细琢的代码。有一天女儿走进书房问他什么是Kubernetes，于是</description>
    </item>
    
    <item>
      <title>[已放弃]打算迁移博客至hexo&#43;github pages</title>
      <link>https://cppfans.org/2126.html</link>
      <pubDate>Thu, 02 Jun 2016 03:25:19 +0000</pubDate>
      
      <guid>https://cppfans.org/2126.html</guid>
      <description>&lt;p&gt;打算迁移博客至hexo+github pages，期间可能会出现无法访问等各种问题，请各位朋友不要惊慌，马上会修复。&lt;/p&gt;

&lt;p&gt;一直想换成静态博客，不过苦于一直没时间折腾hexo，总觉得又要学一套东西，不过现在想了想还是得做这一步，折腾无极限嘛，一来方便管理，二来可以让更多的人参与，三呢可以装逼，所以决定换成hexo + GitHub pages作为博客，各位不要喷我，可能会丢失图片，评论等内容，不过不破不立，各位共勉吧。&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;正在折腾中，各位等结果吧。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[转]理解Python装饰器</title>
      <link>https://cppfans.org/2117.html</link>
      <pubDate>Sat, 21 May 2016 06:56:01 +0000</pubDate>
      
      <guid>https://cppfans.org/2117.html</guid>
      <description>作者：xlzd 链接：http://www.zhihu.com/question/26930016/answer/81263287 来源：知乎 著</description>
    </item>
    
    <item>
      <title>[转]学习新东西的唯一方法</title>
      <link>https://cppfans.org/2114.html</link>
      <pubDate>Thu, 19 May 2016 07:26:22 +0000</pubDate>
      
      <guid>https://cppfans.org/2114.html</guid>
      <description>转自：http://www.jianshu.com/p/3a515cc30df3 有人曾从我工作的一家公司盗取了9千万美元。我不太懂得如何观人</description>
    </item>
    
    <item>
      <title>[转]我在系统设计上犯过的14个错</title>
      <link>https://cppfans.org/2111.html</link>
      <pubDate>Thu, 28 Apr 2016 10:12:53 +0000</pubDate>
      
      <guid>https://cppfans.org/2111.html</guid>
      <description>转自:http://hellojava.info/?p=458 在上篇《架构师画像》的文章中提到了自己在系统设计上犯过的一些错，觉得还挺有意义</description>
    </item>
    
    <item>
      <title>[转]钱没了，公司就死了，科技创业公司如何才能不把钱花光？</title>
      <link>https://cppfans.org/2105.html</link>
      <pubDate>Wed, 09 Mar 2016 11:33:35 +0000</pubDate>
      
      <guid>https://cppfans.org/2105.html</guid>
      <description>&amp;nbsp;编者按：本文作者 Carol Leaman 是 Axonify公司的 CEO，她之前创办的公司被 Google 收购。 10年 前，我成了一家创业早期软件公司的 CEO。我本来</description>
    </item>
    
    <item>
      <title>[转]为何你的产品 Demo 如此糟糕？因为你太注重产品本身了</title>
      <link>https://cppfans.org/2103.html</link>
      <pubDate>Fri, 04 Mar 2016 10:23:49 +0000</pubDate>
      
      <guid>https://cppfans.org/2103.html</guid>
      <description>&amp;nbsp;编者按：不管是大公司还是创业公司，我们很多时候都需要去给别人 Demo 产品，给客户 Demo，给投资人 Demo。但很多时候你会发现你的产品</description>
    </item>
    
    <item>
      <title>[转]为什么面试官很少向求职者解释原因</title>
      <link>https://cppfans.org/2099.html</link>
      <pubDate>Sun, 14 Feb 2016 02:18:17 +0000</pubDate>
      
      <guid>https://cppfans.org/2099.html</guid>
      <description>_本文译自Linkedin，作者 Ambra Benjamin。_ 作为一个面试官，拒绝人是我们工作中最糟糕的部分。相信我，就像求职者害怕接到拒绝电话一样</description>
    </item>
    
    <item>
      <title>[转]为什么我们抛弃ECS而选择了Kubernetes</title>
      <link>https://cppfans.org/2078.html</link>
      <pubDate>Tue, 19 Jan 2016 12:00:44 +0000</pubDate>
      
      <guid>https://cppfans.org/2078.html</guid>
      <description>转载自：http://mp.weixin.qq.com/s?__biz=MzA5OTAyNzQ2OA==&amp;mid=401368207&amp;idx</description>
    </item>
    
    <item>
      <title>[转]程序员如何谋划出月薪3万</title>
      <link>https://cppfans.org/2066.html</link>
      <pubDate>Mon, 04 Jan 2016 02:14:33 +0000</pubDate>
      
      <guid>https://cppfans.org/2066.html</guid>
      <description>转载自：http://www.techug.com/how-to-plan 不久前我发表了一篇文章，“月薪3万的程序员都避开了哪些坑”，在我的</description>
    </item>
    
    <item>
      <title>[转]提问的智慧</title>
      <link>https://cppfans.org/2060.html</link>
      <pubDate>Sun, 13 Dec 2015 09:07:06 +0000</pubDate>
      
      <guid>https://cppfans.org/2060.html</guid>
      <description>提问的智慧 &amp;lt;div&amp;gt; &amp;lt;div class=&amp;#34;author&amp;#34;&amp;gt; &amp;lt;h3 class=&amp;#34;author&amp;#34;&amp;gt; 艾瑞克.史蒂文.雷蒙德（&amp;lt;span class=&amp;#34;firstname&amp;#34;&amp;gt;Eric&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;#34;othername&amp;#34;&amp;gt;Steven&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;#34;surname&amp;#34;&amp;gt;Raymond）&amp;</description>
    </item>
    
    <item>
      <title>什么时候需要学一门新的编程语言？</title>
      <link>https://cppfans.org/2038.html</link>
      <pubDate>Tue, 08 Dec 2015 04:55:00 +0000</pubDate>
      
      <guid>https://cppfans.org/2038.html</guid>
      <description>声明：本文没有任何褒贬或者对比各种编程语言的意思，请不要做无谓的语言之争。 我们这些80后程序员大部分人都是从delphi，C，C++开始接触</description>
    </item>
    
    <item>
      <title>[转]单表60亿记录等大数据场景的MySQL优化和运维之道 | 高可用架构</title>
      <link>https://cppfans.org/2030.html</link>
      <pubDate>Wed, 18 Nov 2015 07:50:30 +0000</pubDate>
      
      <guid>https://cppfans.org/2030.html</guid>
      <description>此文是根据杨尚刚在【QCON高可用架构群】中，针对MySQL在单表海量记录等场景下，业界广泛关注的MySQL问题的经验分享整理而成，转发请注</description>
    </item>
    
    <item>
      <title>Docker初窥</title>
      <link>https://cppfans.org/2020.html</link>
      <pubDate>Mon, 16 Nov 2015 14:34:05 +0000</pubDate>
      
      <guid>https://cppfans.org/2020.html</guid>
      <description>&lt;p&gt;提前多说一句：后续的文章不会是直接发一整篇文章出来，而是有点顺手笔记的意思，想到哪儿写到哪儿，可能会写不完一片，会用TODO来标识出来，也有可能会跳过某一段直接写后面，写完后可能还会重新在整理，大家请知晓。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>记录《QMWS》服务器性能优化过程</title>
      <link>https://cppfans.org/2018.html</link>
      <pubDate>Fri, 13 Nov 2015 08:26:16 +0000</pubDate>
      
      <guid>https://cppfans.org/2018.html</guid>
      <description>性能优化(图片来自网络) 本文是为了记录下《QMWS》项目服务器在对外测试期间，性能表现和技术审核时的性能表现差距很大，从而做出的一些优化过程</description>
    </item>
    
    <item>
      <title>最近我在做什么？</title>
      <link>https://cppfans.org/1997.html</link>
      <pubDate>Thu, 22 Oct 2015 12:29:03 +0000</pubDate>
      
      <guid>https://cppfans.org/1997.html</guid>
      <description>已经很久没有更新过博客了，主要原因还是因为老样子——事情太多了，每天都在瞎忙活。之前几个月一直都在忙结婚的事情，拍婚纱照什么的事情还是比较多</description>
    </item>
    
    <item>
      <title>[转]七个对我最重要的职业建议（译文）</title>
      <link>https://cppfans.org/1995.html</link>
      <pubDate>Sat, 19 Sep 2015 08:14:09 +0000</pubDate>
      
      <guid>https://cppfans.org/1995.html</guid>
      <description>作者： 阮一峰 日期： 2015年9月18日 Nicholas C. Zakas 是全世界最著名的 JavaScript 程序员之一。 两年前，他写了一篇长文，回顾自己的职业生涯，提到七个对他来说最重要</description>
    </item>
    
    <item>
      <title>[转]做技术的你，如果别人找你创业，该怎么办?</title>
      <link>https://cppfans.org/1993.html</link>
      <pubDate>Mon, 07 Sep 2015 12:35:46 +0000</pubDate>
      
      <guid>https://cppfans.org/1993.html</guid>
      <description>&lt;p&gt;&lt;span style=&#34;color: #ff6600; background-color: #ccffcc;&#34;&gt;这个文章总结的简直不能再赞了，所有点基本都说到了。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;转载自：&lt;a href=&#34;http://blog.eood.cn/business-plan&#34;&gt;http://blog.eood.cn/business-plan&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>boost::flat_map性能测试</title>
      <link>https://cppfans.org/1948.html</link>
      <pubDate>Tue, 30 Jun 2015 02:11:25 +0000</pubDate>
      
      <guid>https://cppfans.org/1948.html</guid>
      <description>文章转自：boost::flat_map and its performance compared to map and unordered_map have run a benchmark on different data structures very recently at my company so I feel I need to drop a word. It is very complicated to benchmark something correctly. Benchmarking On the web we rarely find (if ever) a well engineered</description>
    </item>
    
    <item>
      <title>[转]linux下TCP/IP及内核参数优化调优</title>
      <link>https://cppfans.org/1945.html</link>
      <pubDate>Thu, 25 Jun 2015 06:41:46 +0000</pubDate>
      
      <guid>https://cppfans.org/1945.html</guid>
      <description>via:http://www.sudops.com/linux-kernel-tcp-ip-sysctl-optimize.html Linux下TCP/IP及内核参数优化有多种方式，参数配置得当可以大大提高系统的性能，也可以根据特定场景进行专门的优化，如TIME_WAI</description>
    </item>
    
    <item>
      <title>介绍一个headonly的log库easylogging&#43;&#43;</title>
      <link>https://cppfans.org/1901.html</link>
      <pubDate>Fri, 03 Apr 2015 02:14:11 +0000</pubDate>
      
      <guid>https://cppfans.org/1901.html</guid>
      <description>因为TX的log要求按照小时滚动，并且按照大小滚动，原来的glog设置完大小后，容量了就不会再写入了，而且按小时滚动也很麻烦，所以就找了找其</description>
    </item>
    
    <item>
      <title>[转]怎样尊重一个程序员</title>
      <link>https://cppfans.org/1847.html</link>
      <pubDate>Sat, 14 Mar 2015 03:29:02 +0000</pubDate>
      
      <guid>https://cppfans.org/1847.html</guid>
      <description>先在前面写一些，这篇文章提到的一些问题应该很多人都碰到过，很多IT类公司都存在这样的毛病，也存在文中提到的那些人。最后提到的git难用，失败</description>
    </item>
    
    <item>
      <title>[转载]理解云计算：SaaS、PaaS与IaaS</title>
      <link>https://cppfans.org/1840.html</link>
      <pubDate>Sat, 28 Feb 2015 07:59:48 +0000</pubDate>
      
      <guid>https://cppfans.org/1840.html</guid>
      <description>作为一个广义的术语，云计算描述了一种范围广泛的服务。许多IT厂商都抓住了“云”这个概念，并将其作为产品的一种通用技术。对于公司而言，为了真正</description>
    </item>
    
    <item>
      <title>*.pvr.ccz与png格式的互转</title>
      <link>https://cppfans.org/1778.html</link>
      <pubDate>Sat, 24 Jan 2015 05:30:22 +0000</pubDate>
      
      <guid>https://cppfans.org/1778.html</guid>
      <description>这两天在看一个安卓游戏，资源挺不错的，解压后发现animation里的图片格式全是pvr.ccz，查了下，这是做2D游戏spirit图打包后</description>
    </item>
    
    <item>
      <title>感谢网友[Chen Hypo]帮我设计2015年新年banner</title>
      <link>https://cppfans.org/1769.html</link>
      <pubDate>Mon, 29 Dec 2014 08:29:30 +0000</pubDate>
      
      <guid>https://cppfans.org/1769.html</guid>
      <description>今天突然看到有一位朋友在我博客留言说送了一个新年礼物给我，打开邮箱看了下，果然有惊喜， 引用邮件原文： 哈喽，新年马上就要来了，我在自己的博客广</description>
    </item>
    
    <item>
      <title>protobuf通过反射来赋值</title>
      <link>https://cppfans.org/1758.html</link>
      <pubDate>Wed, 26 Nov 2014 12:48:05 +0000</pubDate>
      
      <guid>https://cppfans.org/1758.html</guid>
      <description>最近因为项目逻辑方面都做的差不多了，于是赶紧去做做测试工作，免得项目上线之后出问题，于是打算用配置的形式做一个类似与白盒测试工具的东西出来。</description>
    </item>
    
    <item>
      <title>收集的几个xshell的配色方案</title>
      <link>https://cppfans.org/1749.html</link>
      <pubDate>Fri, 21 Nov 2014 07:01:38 +0000</pubDate>
      
      <guid>https://cppfans.org/1749.html</guid>
      <description>经常使用xshell来操作Linux，不过现在xshell的School/home免费版本那几个配色方案都不怎么好看，在网上搜刮了几个配色方</description>
    </item>
    
    <item>
      <title>[转]程序员真正的价值</title>
      <link>https://cppfans.org/1744.html</link>
      <pubDate>Fri, 14 Nov 2014 02:14:28 +0000</pubDate>
      
      <guid>https://cppfans.org/1744.html</guid>
      <description>看到这篇文章有一些感触，所以就转过来了。虽然我也不是什么大牛，但是文章中提到的情况也遇到过，各位共勉吧。 &amp;nbsp; -&amp;ndash;-&amp;ndash;-</description>
    </item>
    
    <item>
      <title>[转]22条日常技巧助程序员提高工作效率、节约时间</title>
      <link>https://cppfans.org/1737.html</link>
      <pubDate>Tue, 28 Oct 2014 02:00:21 +0000</pubDate>
      
      <guid>https://cppfans.org/1737.html</guid>
      <description>我一直在测试和调整各种生产效率的技术，在过去的五年中，阅读了大量的书籍（其中大多数是重复的） ，这里是我的一些结论： 这不是一个关于时间的问题，</description>
    </item>
    
    <item>
      <title>google-breakpad在C&#43;&#43; 11下编译错误修改</title>
      <link>https://cppfans.org/1730.html</link>
      <pubDate>Mon, 29 Sep 2014 06:23:27 +0000</pubDate>
      
      <guid>https://cppfans.org/1730.html</guid>
      <description>我只用到了exception_handler模块，暂时还未用到Server模块，因为用到了C++ 11的一些特性，而google-breadp</description>
    </item>
    
    <item>
      <title>[投稿]operator delete异常分析</title>
      <link>https://cppfans.org/1716.html</link>
      <pubDate>Mon, 22 Sep 2014 02:23:20 +0000</pubDate>
      
      <guid>https://cppfans.org/1716.html</guid>
      <description>C 中delete表达式执行的操作是：1，调用析构函数；2，释放对象内存（operator delete(&amp;hellip;)）。 如果父类的析构函</description>
    </item>
    
    <item>
      <title>linux下升级gcc的方法 - 亲测可用</title>
      <link>https://cppfans.org/1719.html</link>
      <pubDate>Fri, 19 Sep 2014 09:33:37 +0000</pubDate>
      
      <guid>https://cppfans.org/1719.html</guid>
      <description>由于工作主要平台换到了linux上，而linux因为源上没有比较新的gcc，只有4.7，而我们用到了C++11， 只好自己升级了，升级方法也比</description>
    </item>
    
    <item>
      <title>使用boost进行CRC64计算</title>
      <link>https://cppfans.org/1713.html</link>
      <pubDate>Mon, 25 Aug 2014 12:03:32 +0000</pubDate>
      
      <guid>https://cppfans.org/1713.html</guid>
      <description>因接入平台，平台提供的是一个字符串的key作为用户标识，而且要用到分布式，所以没法用以前的数据库递增来做用户ID，于是用CRC64来生成ui</description>
    </item>
    
    <item>
      <title>[转]一致性hash算法 - consistent hashing</title>
      <link>https://cppfans.org/1703.html</link>
      <pubDate>Mon, 25 Aug 2014 03:09:36 +0000</pubDate>
      
      <guid>https://cppfans.org/1703.html</guid>
      <description>via.http://blog.csdn.net/sparkliang/article/details/5279393 一致性 hash 算法（ consistent hashing ） 张亮 consistent hashing 算法早在 1997 年就在论文 Consistent hashing and random trees 中被提出，目前在cache 系统中应用越来越广泛； 1 基本场景 比如你有 N 个 cache 服务器（</description>
    </item>
    
    <item>
      <title>[转]国外程序员推荐：每个程序员都应该读的非编程书</title>
      <link>https://cppfans.org/1684.html</link>
      <pubDate>Wed, 16 Jul 2014 01:37:49 +0000</pubDate>
      
      <guid>https://cppfans.org/1684.html</guid>
      <description>五年前有网友在 Stackoverflow 发帖提问：『程序员应该读哪些非编程方面的书？』。有很多程序员响应，他们在推荐的同时也写下了自己的评语。本文摘编其中 29 本书，下</description>
    </item>
    
    <item>
      <title>Compile python to exe</title>
      <link>https://cppfans.org/1676.html</link>
      <pubDate>Fri, 11 Jul 2014 03:47:52 +0000</pubDate>
      
      <guid>https://cppfans.org/1676.html</guid>
      <description>When we write a python file, we can use command line &amp;ldquo;python test.py&amp;rdquo; to execute this file, but we need python environment, when publish programs, most user don&amp;rsquo;t have python in their PC, so sometimes we need to transfer python to executable file, like exe. &amp;nbsp; Here are two methods to make it. Suppose our code like below: #encoding:utf-8 #test.py if __name__ == &#34;__main__&#34;: print(&#34;Hello world!&#34;) &amp;nbsp; 1. py2exe project</description>
    </item>
    
    <item>
      <title>使用redis五倍加速WP博客</title>
      <link>https://cppfans.org/1665.html</link>
      <pubDate>Tue, 01 Jul 2014 05:53:24 +0000</pubDate>
      
      <guid>https://cppfans.org/1665.html</guid>
      <description>已经换了linode-vps有一段时间了，但是博客的访问速度一直不理想，使用了xcache和eAccelerator，但是速度还是不给力，于</description>
    </item>
    
    <item>
      <title>LNMP折腾小记</title>
      <link>https://cppfans.org/1653.html</link>
      <pubDate>Tue, 10 Jun 2014 15:58:58 +0000</pubDate>
      
      <guid>https://cppfans.org/1653.html</guid>
      <description>两天前刚刚买了linode的$20/mo 的vps，试了一下还是蛮爽的。因为Ubuntu Server实在太不熟悉了，所以装上之后又狠心换成了了</description>
    </item>
    
    <item>
      <title>[转]Leveldb实现原理</title>
      <link>https://cppfans.org/1652.html</link>
      <pubDate>Sat, 07 Jun 2014 02:17:09 +0000</pubDate>
      
      <guid>https://cppfans.org/1652.html</guid>
      <description>看leveldb的时候搜到这篇文章，觉得很不错，就转过来了，原文地址：http://www.cnblogs.com/haippy/archi</description>
    </item>
    
    <item>
      <title>leveldb小尝试</title>
      <link>https://cppfans.org/1651.html</link>
      <pubDate>Sat, 07 Jun 2014 01:54:38 +0000</pubDate>
      
      <guid>https://cppfans.org/1651.html</guid>
      <description>最近项目挺忙的，也没什么时间写博客了，这篇也是工作中遇到mysql经常同时请求数据就CPU暴高，就看了下nosql，redis已经有同事尝试</description>
    </item>
    
    <item>
      <title>[转载]PM和程序员（RD）的相处之道－－写给那些血气方刚的产品经理（PM）</title>
      <link>https://cppfans.org/1645.html</link>
      <pubDate>Sat, 17 May 2014 09:17:12 +0000</pubDate>
      
      <guid>https://cppfans.org/1645.html</guid>
      <description>写在前面： 虽然我是程序猿，不是PM，但觉得这篇文章讲的思维方式比较好，适合团队内沟通，所以转了过来。 &amp;nbsp; 转载正文：最近有位刚做 PM（产品经理）</description>
    </item>
    
    <item>
      <title>share_ptr的几个注意点</title>
      <link>https://cppfans.org/1641.html</link>
      <pubDate>Wed, 14 May 2014 01:24:35 +0000</pubDate>
      
      <guid>https://cppfans.org/1641.html</guid>
      <description>智能指针在boost中很早就有了，在tr1上也很早，但是没怎么用，后来0x标准出来之后，智能指针变成了标准库，所以现在用起来就不区分boos</description>
    </item>
    
    <item>
      <title>[转载]想提升工作效率，就別再做这七件事</title>
      <link>https://cppfans.org/1644.html</link>
      <pubDate>Tue, 13 May 2014 02:56:17 +0000</pubDate>
      
      <guid>https://cppfans.org/1644.html</guid>
      <description>原文出处： medium 译文出处： inside - elaine。 试想一位小公司老板每日孜孜不倦地工作，为何不能从为数众多的竞争者脱颖而出？ 一位创业家可以不眠不休一天</description>
    </item>
    
    <item>
      <title>mysqlpp中一些特殊功能总结</title>
      <link>https://cppfans.org/1634.html</link>
      <pubDate>Tue, 15 Apr 2014 08:52:29 +0000</pubDate>
      
      <guid>https://cppfans.org/1634.html</guid>
      <description>之前有写过一篇mysql++的文章 《C++使用MySql++操作数据库实例》,里面讲了C++如何用mysql++的库来操作mysql数据库，</description>
    </item>
    
    <item>
      <title>boost相关小知识(长期顶置更新)</title>
      <link>https://cppfans.org/1534.html</link>
      <pubDate>Fri, 04 Apr 2014 12:46:25 +0000</pubDate>
      
      <guid>https://cppfans.org/1534.html</guid>
      <description>2.boost throw_exception unresolved 在项目中(windows VS环境)增加了一些boost库，导致一个链接报错， throw_exception unresolved (link error) 可以修改vs的工程属性，/EH 和 /GX属性 修改方法</description>
    </item>
    
    <item>
      <title>[投稿]一年工作总结 (单进程网游服务器框架介绍)</title>
      <link>https://cppfans.org/1624.html</link>
      <pubDate>Thu, 03 Apr 2014 06:25:49 +0000</pubDate>
      
      <guid>https://cppfans.org/1624.html</guid>
      <description>工作已经满一年了。。。记得还是去年十月多的时候来广州找工作的，找了大概一个星期左右，然后找到这家公司后就一直待到现在。今年毕业的时候回了趟学</description>
    </item>
    
    <item>
      <title>[转]想要不加班，就先丢掉这7样东西...</title>
      <link>https://cppfans.org/1627.html</link>
      <pubDate>Tue, 11 Mar 2014 12:36:13 +0000</pubDate>
      
      <guid>https://cppfans.org/1627.html</guid>
      <description>via: http://www.aow.me/jian-shao-gong-zuo-jian-dan-gong-zuo/ 如果你的工作似乎总是做不完，每天都要加班，即使到了周末，也不能休息，还要拖着疲惫的身体继续去公司上班，你就需要停下来好好地思考自己的工作</description>
    </item>
    
    <item>
      <title>网游服务器中的GUID(唯一标识码)实现-基于snowflake算法</title>
      <link>https://cppfans.org/1623.html</link>
      <pubDate>Mon, 03 Mar 2014 14:53:24 +0000</pubDate>
      
      <guid>https://cppfans.org/1623.html</guid>
      <description>本文中的算法采用twitter的snowflake算法，具体请搜索介绍，原来是用Scala写的，因我项目需要，改写成C++语言，主要用于高效</description>
    </item>
    
    <item>
      <title>linux常见问题汇总(长期顶置更新)</title>
      <link>https://cppfans.org/1544.html</link>
      <pubDate>Thu, 27 Feb 2014 03:09:22 +0000</pubDate>
      
      <guid>https://cppfans.org/1544.html</guid>
      <description>&lt;h3 id=&#34;2014-12-23更新&#34;&gt;2014/12/23更新：&lt;/h3&gt;

&lt;p&gt;7.glibc版本查看&lt;/p&gt;

&lt;p&gt;把libc.so.6当成执行文件运行下就可以看到版本号&lt;/p&gt;

&lt;p&gt;6.GLIBCXX版本查看&lt;/p&gt;

&lt;p&gt;strings /usr/lib64/libstdc++.so.6 | grep GLIBCXX&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;5.mysql++静态编译方法&lt;/p&gt;

&lt;p&gt;mysql++下载来后无法静态编译，加了 &amp;ndash;enable-static=yes也不行，不过我们可以直接使用ar命令编译.o文件，命令如下&lt;/p&gt;

&lt;pre&gt;ar rcu libmysqlpp.a mysqlpp_beemutex.o mysqlpp_cmdline.o mysqlpp_connection.o mysqlpp_cpool.o mysqlpp_datetime.o mysqlpp_dbdriver.o mysqlpp_field_names.o mysqlpp_field_types.o mysqlpp_manip.o mysqlpp_myset.o mysqlpp_mysql++.o mysqlpp_mystring.o mysqlpp_null.o mysqlpp_options.o mysqlpp_qparms.o mysqlpp_query.o mysqlpp_result.o mysqlpp_row.o mysqlpp_scopedconnection.o mysqlpp_sql_buffer.o mysqlpp_sqlstream.o mysqlpp_ssqls2.o mysqlpp_stadapter.o mysqlpp_tcp_connection.o mysqlpp_transaction.o mysqlpp_type_info.o mysqlpp_uds_connection.o mysqlpp_utility.o mysqlpp_vallist.o mysqlpp_wnp_connection.o ssqls2parse_parsev2.o&lt;/pre&gt;

&lt;p&gt;然后直接使用libmysqlpp.a就好了&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;4.linux下服务自启动几种方法&lt;/p&gt;

&lt;p&gt;(1)chkconfig&lt;/p&gt;

&lt;p&gt;例如将httpd自启动，首先查看httpd服务是否已经自启动了&lt;/p&gt;

&lt;pre&gt;#chkconfig --list | grep httpd&lt;/pre&gt;

&lt;pre&gt;httpd           0:off   1:off   2:off   3:off   4:off   5:off   6:off&lt;/pre&gt;

&lt;p&gt;如果结果是上述，则使用下面命令打开自启动&lt;/p&gt;

&lt;pre&gt;#chkconfig httpd on&lt;/pre&gt;

&lt;pre&gt;httpd           0:off   1:off   2:on    3:on    4:on    5:on    6:off&lt;/pre&gt;

&lt;p&gt;如果httpd没有加入自启动列表，先增加进列表中&lt;/p&gt;

&lt;pre&gt;#chkconfig --add httpd&lt;/pre&gt;

&lt;p&gt;(2)修改rc.local文件&lt;/p&gt;

&lt;p&gt;例如我们想自启动mysqld_safe，在rc.local中增加如下命令&lt;/p&gt;

&lt;pre&gt;#mysql&lt;/pre&gt;

&lt;pre&gt;/usr/local/mysql/bin/mysqld_safe &amp;&lt;/pre&gt;

&lt;p&gt;保存后就可以了&lt;/p&gt;

&lt;p&gt;(3)ln软链接的方法就不做介绍了，感觉太麻烦了，大家请自行查阅&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>glog使用与功能修改</title>
      <link>https://cppfans.org/1566.html</link>
      <pubDate>Wed, 19 Feb 2014 05:49:02 +0000</pubDate>
      
      <guid>https://cppfans.org/1566.html</guid>
      <description>在写代码的过程中，打log肯定是少不了的，毕竟不能总靠调试来发现问题。log库的选用就很纠结了，成熟的log库非常多，log4cpp、log</description>
    </item>
    
    <item>
      <title>回复某在校学生的邮件问题</title>
      <link>https://cppfans.org/1618.html</link>
      <pubDate>Sat, 15 Feb 2014 09:55:06 +0000</pubDate>
      
      <guid>https://cppfans.org/1618.html</guid>
      <description>原邮件如下： eliteYang: 您好. 我是一名软件工程专业的大学生,我们一门课的期末作业要求是访谈一位已经从业的前辈.我个人也是非常喜欢C++,当老师留这个作</description>
    </item>
    
    <item>
      <title>静态编译libevent</title>
      <link>https://cppfans.org/1564.html</link>
      <pubDate>Thu, 30 Jan 2014 15:38:26 +0000</pubDate>
      
      <guid>https://cppfans.org/1564.html</guid>
      <description>libevent简介 libevent是一个事件触发的网络库，适用于windows、linux、bsd等多种平台，内部使用select、epo</description>
    </item>
    
    <item>
      <title>2013结束语</title>
      <link>https://cppfans.org/1562.html</link>
      <pubDate>Wed, 29 Jan 2014 14:13:44 +0000</pubDate>
      
      <guid>https://cppfans.org/1562.html</guid>
      <description>我已经放假三天了，公司26号晚上开的年会，晚上快10点喝的晕晕的从奉贤区回来，感谢灵娱的那位朋友在我们出来的时候帮我们叫住了回去的大巴，以至</description>
    </item>
    
    <item>
      <title>[转]C&#43;&#43;强大背后</title>
      <link>https://cppfans.org/1557.html</link>
      <pubDate>Wed, 22 Jan 2014 05:00:05 +0000</pubDate>
      
      <guid>https://cppfans.org/1557.html</guid>
      <description>在31年前(1979年)，一名刚获得博士学位的研究员，为了开发一个软件项目发明了一门新编程语言，该研究员名为Bjarne Stroustrup</description>
    </item>
    
    <item>
      <title>被高估人士的七个习惯</title>
      <link>https://cppfans.org/1556.html</link>
      <pubDate>Mon, 20 Jan 2014 02:37:53 +0000</pubDate>
      
      <guid>https://cppfans.org/1556.html</guid>
      <description>写在前面： 最近一段工作下来，产生了挺多问题，听到的最多的话就是&amp;rdquo;千万不要高估别人&amp;rdquo;，而微博上正好看到了这篇文章，转过</description>
    </item>
    
    <item>
      <title>[转]被诅咒的程序员的七宗罪</title>
      <link>https://cppfans.org/1546.html</link>
      <pubDate>Tue, 24 Dec 2013 02:41:27 +0000</pubDate>
      
      <guid>https://cppfans.org/1546.html</guid>
      <description>七宗罪（Seven deadly sins），13世纪道明会神父圣多玛斯·阿奎纳列举出各种恶行的表现。这些恶行最初是由希腊神学修道士庞义伐草撰出8种损害个</description>
    </item>
    
    <item>
      <title>字库识别网站——求字体网</title>
      <link>https://cppfans.org/1537.html</link>
      <pubDate>Wed, 11 Dec 2013 05:43:16 +0000</pubDate>
      
      <guid>https://cppfans.org/1537.html</guid>
      <description>看到别人网站上的一些字体比较好看，却苦于不知道是什么字体，搜索来到了求字体网站，网站的功能很简单，上传图片分析字体，并且提供输入字体名预览的</description>
    </item>
    
    <item>
      <title>linux下link错误undefined reference&#39;dlclose&#39;</title>
      <link>https://cppfans.org/1519.html</link>
      <pubDate>Tue, 03 Dec 2013 14:15:37 +0000</pubDate>
      
      <guid>https://cppfans.org/1519.html</guid>
      <description>最近因为换了工作，服务器是在linux环境下，又开始捣鼓linux了，与同事两天的奋战中，发现差不多可以写一本《某哥的linux私房菜》了，</description>
    </item>
    
    <item>
      <title>[转]告诉你How To一眼认出英语单词的意思</title>
      <link>https://cppfans.org/1515.html</link>
      <pubDate>Sat, 16 Nov 2013 15:14:12 +0000</pubDate>
      
      <guid>https://cppfans.org/1515.html</guid>
      <description>via:http://blog.30c.org/2800.html 请大家想一想，英语是谁发明的？英国人呗！英国人认不认识汉语？不认识！那么英国人在学英语单词的时候需不需要记住单词的汉语意思？不需要，英国人</description>
    </item>
    
    <item>
      <title>goagent3.0.8解决翻墙404问题</title>
      <link>https://cppfans.org/1514.html</link>
      <pubDate>Thu, 14 Nov 2013 07:57:33 +0000</pubDate>
      
      <guid>https://cppfans.org/1514.html</guid>
      <description>貌似在双十一前几天，不知道GFW搞了什么东西，导致goagent无法翻墙，一直提示404错误。微博上很多人都在说，去看了下goagent项目</description>
    </item>
    
    <item>
      <title>十一桂林行</title>
      <link>https://cppfans.org/1509.html</link>
      <pubDate>Tue, 08 Oct 2013 15:31:22 +0000</pubDate>
      
      <guid>https://cppfans.org/1509.html</guid>
      <description>不知不觉间，10.1已经过完了，之前打算的是去看下侄女（亲侄女哦，现在不到百天）。顺道看看桂林的风景，换个心情，调整下自己。 因前面也没事情，</description>
    </item>
    
    <item>
      <title>因主机流量用光导致无法访问的致歉</title>
      <link>https://cppfans.org/1506.html</link>
      <pubDate>Thu, 26 Sep 2013 14:07:43 +0000</pubDate>
      
      <guid>https://cppfans.org/1506.html</guid>
      <description>昨天和今天本站博客和论坛均无法访问，昨天晚上查看了下因为流量用光了，导致所有网页均无法打开，刚刚与空间商沟通后升级了主机套餐，现在已经没有问</description>
    </item>
    
    <item>
      <title>答某位朋友邮件中关于编程风格的问题</title>
      <link>https://cppfans.org/1497.html</link>
      <pubDate>Mon, 15 Jul 2013 13:06:12 +0000</pubDate>
      
      <guid>https://cppfans.org/1497.html</guid>
      <description>今天有位朋友邮件问我了一些关于编程风格的问题，先引用下邮件原文： eliteYang，您好，一直喜欢看你的博客，一直觉得你是一个对程序对生活都</description>
    </item>
    
    <item>
      <title>谈谈当今的游戏行业(1)——是否端游已死，页游将死？</title>
      <link>https://cppfans.org/1471.html</link>
      <pubDate>Wed, 10 Jul 2013 15:31:50 +0000</pubDate>
      
      <guid>https://cppfans.org/1471.html</guid>
      <description>本系列文章可能有好几篇，现在暂时不能确定具体数量。这种发表观点类型的文章本来应该应该用微信来发布的，不过微信我还在申请公众平台审核，而且那公</description>
    </item>
    
    <item>
      <title>我也来说说扁平化设计</title>
      <link>https://cppfans.org/1488.html</link>
      <pubDate>Mon, 01 Jul 2013 14:23:42 +0000</pubDate>
      
      <guid>https://cppfans.org/1488.html</guid>
      <description>最近由于iOS7 beta版本的推出，导致了扁平化设计又被推上了一个热潮，所以我也凑个热闹，随便说一说。 到底什么是扁平化设计呢？ 扁平化完全属于</description>
    </item>
    
    <item>
      <title>[转载]10 个你必须掌握的超酷 VI 命令技巧</title>
      <link>https://cppfans.org/1485.html</link>
      <pubDate>Thu, 27 Jun 2013 12:23:31 +0000</pubDate>
      
      <guid>https://cppfans.org/1485.html</guid>
      <description>via:http://wiki.itivy.com/?p=285 摘要：大部分Linux开发者对vi命相当熟悉，可是遗憾的是，大部分开发者都只能掌握一些最常用的Linux vi命令，下面介绍的10个vi命令</description>
    </item>
    
    <item>
      <title>谈谈程序员行业的“文人相轻”以及沟通问题</title>
      <link>https://cppfans.org/1472.html</link>
      <pubDate>Mon, 27 May 2013 17:05:33 +0000</pubDate>
      
      <guid>https://cppfans.org/1472.html</guid>
      <description>很早以前就想写这篇文章了，不过却因自己经验甚浅，不敢妄言，虽然现在写也可能引起一些争论，还是请大家平和的去看这篇文章。 自古以来便有文人相轻，</description>
    </item>
    
    <item>
      <title>恢复网站色彩并试用Windows live</title>
      <link>https://cppfans.org/1478.html</link>
      <pubDate>Fri, 26 Apr 2013 12:33:00 +0000</pubDate>
      
      <guid>https://cppfans.org/1478.html</guid>
      <description>博客已经改为黑白色一周了，地震救援工作也已经进行了一周了，各地也积极的开始了捐款、捐物资等活动，觉得可以去掉这个黑白滤镜了，心意到了就好了。</description>
    </item>
    
    <item>
      <title>祈福雅安，为同胞默哀!</title>
      <link>https://cppfans.org/1475.html</link>
      <pubDate>Mon, 22 Apr 2013 11:38:40 +0000</pubDate>
      
      <guid>https://cppfans.org/1475.html</guid>
      <description>关于4.20四川雅安7.0级地震的消息想必大家都知道了，就不多说了，新闻是铺天盖地的，其中有一些感动的新闻，也有一些对救灾中的负面新闻，也希</description>
    </item>
    
    <item>
      <title>网站设计之CSS精灵图</title>
      <link>https://cppfans.org/1468.html</link>
      <pubDate>Sun, 24 Mar 2013 14:48:39 +0000</pubDate>
      
      <guid>https://cppfans.org/1468.html</guid>
      <description>写完这个标题后，我就后悔了，因为这个标题会让别人误以为我很懂网站设计似的，其实对于web开发我是个外行。没改标题的原因是可以让大家有“虽不懂</description>
    </item>
    
    <item>
      <title>[转载]我眼中的技术高手 - lifesinger</title>
      <link>https://cppfans.org/1467.html</link>
      <pubDate>Wed, 20 Mar 2013 14:59:28 +0000</pubDate>
      
      <guid>https://cppfans.org/1467.html</guid>
      <description>今天发了一条微博： 会原生 JavaScript 不代表什么，懂 jQuery、YUI 等才真正好。怎么这么多人有原生主义情结呢？走出那点小天地，海阔天高。 很多人已经猜</description>
    </item>
    
    <item>
      <title>使用jsoncpp解析JSON数据</title>
      <link>https://cppfans.org/1445.html</link>
      <pubDate>Tue, 05 Mar 2013 15:36:28 +0000</pubDate>
      
      <guid>https://cppfans.org/1445.html</guid>
      <description>上节《JSON数据格式》中我们讲到了JSON的数据格式和一些应用的地方,接着上面的说下去，jsoncpp和boost.property_tr</description>
    </item>
    
    <item>
      <title>JSON数据格式</title>
      <link>https://cppfans.org/1442.html</link>
      <pubDate>Sun, 24 Feb 2013 12:17:36 +0000</pubDate>
      
      <guid>https://cppfans.org/1442.html</guid>
      <description>看到boost::property_tree类库的时候，发现它可以解析XML、JSON、INI，INFO格式的文件，XML和INI已经使用过</description>
    </item>
    
    <item>
      <title>wordpress百度分享工具条最新版本1.0发布</title>
      <link>https://cppfans.org/1449.html</link>
      <pubDate>Tue, 29 Jan 2013 01:10:39 +0000</pubDate>
      
      <guid>https://cppfans.org/1449.html</guid>
      <description>好长一段时间都没理会百度分享工具条了，最近看到倡萌将这个工具条进行了一些优化和精简(《WordPress添加仿异次元百度分享工具条》)，决定</description>
    </item>
    
    <item>
      <title>初识英特尔线程构建模块之内存管理tbb_malloc</title>
      <link>https://cppfans.org/1437.html</link>
      <pubDate>Sun, 27 Jan 2013 13:01:45 +0000</pubDate>
      
      <guid>https://cppfans.org/1437.html</guid>
      <description>什么是TBB？ TBB(Thread Building Blocks)是英特尔发布的一个库，全称为 Threading Building Blocks，里面包含了 Algorithms、Containers、Memo</description>
    </item>
    
    <item>
      <title>为何python现在越来越多的人在用了？</title>
      <link>https://cppfans.org/1436.html</link>
      <pubDate>Wed, 09 Jan 2013 14:05:07 +0000</pubDate>
      
      <guid>https://cppfans.org/1436.html</guid>
      <description>曾几何时，python这门语言我并没有听过，那个时候只知道C，后来学了C++，用了C++ Builder和VS，再后来学了C#的皮毛，继之是L</description>
    </item>
    
    <item>
      <title>浅析epoll - epoll例子以及分析</title>
      <link>https://cppfans.org/1419.html</link>
      <pubDate>Sun, 06 Jan 2013 01:15:58 +0000</pubDate>
      
      <guid>https://cppfans.org/1419.html</guid>
      <description>上篇我们讲到epoll的函数和性能。这一篇用用这些个函数，给出一个最简单的epoll的例子。 // // a simple echo server using epoll in linux // // 2009-11-05 // by sparkling // #include &amp;lt;sys/socket.h&amp;gt; #include &amp;lt;sys/epoll.h&amp;gt; #include &amp;lt;netinet/in.h&amp;gt; #include</description>
    </item>
    
    <item>
      <title>2013，新的一年，祝大家诸事顺利！</title>
      <link>https://cppfans.org/1432.html</link>
      <pubDate>Tue, 01 Jan 2013 04:17:38 +0000</pubDate>
      
      <guid>https://cppfans.org/1432.html</guid>
      <description>今天是2013年了，2012的末日预言我们一起挺过了，感谢大家一致以来对本博客的支持和关注，只有努力写出更多的文章来让大家学习交流。 新年伊始</description>
    </item>
    
    <item>
      <title>C&#43;&#43; POD(Plain Old Data)类型</title>
      <link>https://cppfans.org/1431.html</link>
      <pubDate>Sun, 30 Dec 2012 03:41:23 +0000</pubDate>
      
      <guid>https://cppfans.org/1431.html</guid>
      <description>群里发过来一份他们公司的笔试题，看了下，发现里面考了一个判断如下是否为POD类型，没搞明白什么是POD，多方查阅后，发现其实是指一个C风格代</description>
    </item>
    
    <item>
      <title>[转载]Pthreads mutex VS Pthreads spinlock</title>
      <link>https://cppfans.org/1426.html</link>
      <pubDate>Wed, 26 Dec 2012 12:15:48 +0000</pubDate>
      
      <guid>https://cppfans.org/1426.html</guid>
      <description>转载自：http://www.searchtb.com/2011/01/pthreads-mutex-vs-pthread-spinlock</description>
    </item>
    
    <item>
      <title>wordpress中加载JQuery库的几种方法</title>
      <link>https://cppfans.org/1425.html</link>
      <pubDate>Sun, 23 Dec 2012 06:12:33 +0000</pubDate>
      
      <guid>https://cppfans.org/1425.html</guid>
      <description>Jquery是继prototype之后又一个优秀的Javascrīpt框架。它是轻量级的js库(压缩后只有21k) ，它兼容CSS3，还兼容各</description>
    </item>
    
    <item>
      <title>浅析epoll - epoll函数深入讲解</title>
      <link>https://cppfans.org/1418.html</link>
      <pubDate>Sun, 16 Dec 2012 10:14:39 +0000</pubDate>
      
      <guid>https://cppfans.org/1418.html</guid>
      <description>前一篇大致讲了一下epoll是个什么东西，优点等内容，这篇延续上一篇的内容，主要是分析epoll的函数，epoll高性能的深入分析。 epol</description>
    </item>
    
    <item>
      <title>浅析epoll-为何多路复用I/O要使用epoll</title>
      <link>https://cppfans.org/1417.html</link>
      <pubDate>Mon, 10 Dec 2012 01:20:30 +0000</pubDate>
      
      <guid>https://cppfans.org/1417.html</guid>
      <description>现如今，网络通讯中用epoll(linux)和IOCP(windows)几乎是大家津津乐道的东西，不为别的，就因为高效，所以大家喜欢用。IO</description>
    </item>
    
    <item>
      <title>Ubuntu12.04下安装eclipse C/C&#43;&#43;开发环境</title>
      <link>https://cppfans.org/1413.html</link>
      <pubDate>Mon, 03 Dec 2012 01:20:09 +0000</pubDate>
      
      <guid>https://cppfans.org/1413.html</guid>
      <description>前段时间在linux上一直使用的是codeblocks，但是感觉提示还是不智能，所以想试试eclipse，下载安装。 安装方法有两种，都很简单</description>
    </item>
    
    <item>
      <title>[转载]永远不要将三种东西放进数据库里</title>
      <link>https://cppfans.org/1412.html</link>
      <pubDate>Sat, 01 Dec 2012 01:25:40 +0000</pubDate>
      
      <guid>https://cppfans.org/1412.html</guid>
      <description>导读：作者Frank Wiles发 表了一篇博文,Frank Wiles曾在很多演讲里说过,改进你的系统的最好的方法是先避免做“蠢事”.并不是说你</description>
    </item>
    
    <item>
      <title>Unix网络编程第三版中代码环境搭建</title>
      <link>https://cppfans.org/1411.html</link>
      <pubDate>Thu, 29 Nov 2012 01:20:27 +0000</pubDate>
      
      <guid>https://cppfans.org/1411.html</guid>
      <description>最近在啃《Unix网络编程第三版 卷1》，其中出现了很多关于unp.h的地方，应该是书中自带的文件，搜索了一下，下载了源代码来自己编译。 源代码</description>
    </item>
    
    <item>
      <title>对象序列化类库MsgPack介绍</title>
      <link>https://cppfans.org/1410.html</link>
      <pubDate>Mon, 26 Nov 2012 13:24:07 +0000</pubDate>
      
      <guid>https://cppfans.org/1410.html</guid>
      <description>MessagePack(以下简称MsgPack)一个基于二进制高效的对象序列化类库，可用于跨语言通信。它可以像JSON那样，在许多种语言之间</description>
    </item>
    
    <item>
      <title>分享自定义静态断言代码</title>
      <link>https://cppfans.org/1408.html</link>
      <pubDate>Wed, 21 Nov 2012 01:20:47 +0000</pubDate>
      
      <guid>https://cppfans.org/1408.html</guid>
      <description>本文代码来自于QQ群中nous大神，类似于static assert，不过断言异常内容可以自定义。 代码分为boost版本和标准版本，使用ENS</description>
    </item>
    
    <item>
      <title>赏析某程序员寒冬自助暖手程序</title>
      <link>https://cppfans.org/1405.html</link>
      <pubDate>Sat, 17 Nov 2012 02:25:54 +0000</pubDate>
      
      <guid>https://cppfans.org/1405.html</guid>
      <description>群中发了一个精辟的代码段，说是OSChina上某屌丝程序员抱怨没有妹子，没有电暖宝，没有热水，从而苦于寒冬手冷无法写代码，于是自己写了一段程</description>
    </item>
    
    <item>
      <title>浅析国内某种端游服务器架构</title>
      <link>https://cppfans.org/1404.html</link>
      <pubDate>Thu, 15 Nov 2012 01:40:20 +0000</pubDate>
      
      <guid>https://cppfans.org/1404.html</guid>
      <description>做服务器开发两年了，也没学到太多的东西，更多的应该是处理问题的思路。而思路决定你如何处理问题，我觉得这个很关键，比你噼里啪啦的打了一通代码要</description>
    </item>
    
    <item>
      <title>Ubuntu下如何安装boost？</title>
      <link>https://cppfans.org/1402.html</link>
      <pubDate>Tue, 13 Nov 2012 01:30:55 +0000</pubDate>
      
      <guid>https://cppfans.org/1402.html</guid>
      <description>最近有开始折腾Linux了，没办法，太多的东西都是在Linux下很高效并且不提供VS的工程文件，所以还是学学Linux吧，免得以后被人说做服</description>
    </item>
    
    <item>
      <title>观西乔《神秘的程序员41期-条件反射》有感</title>
      <link>https://cppfans.org/1399.html</link>
      <pubDate>Fri, 09 Nov 2012 02:00:03 +0000</pubDate>
      
      <guid>https://cppfans.org/1399.html</guid>
      <description>前一段时间看到新工具对西乔的专访，突然想起来她就是那个《神秘的程序员》系列漫画的作者，她还有一个站点是全球设计精享站designlol.ne</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 0x之auto - 从初始化中推断数据类型</title>
      <link>https://cppfans.org/1398.html</link>
      <pubDate>Wed, 07 Nov 2012 01:40:02 +0000</pubDate>
      
      <guid>https://cppfans.org/1398.html</guid>
      <description>引言 曾几何时，C++ 0x出现在我们眼前，我们还在苦逼的用老的规则写代码，因为我们是码畜，我们的顶头上司要求我们必须用土的掉渣的VS2005来</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 0x之右值引用</title>
      <link>https://cppfans.org/1397.html</link>
      <pubDate>Sun, 04 Nov 2012 09:39:05 +0000</pubDate>
      
      <guid>https://cppfans.org/1397.html</guid>
      <description>C++ 0x标准出来有一段时间了，一直没时间看，导致最近看一些代码完全不明白是什么意思了，只好硬着头皮来看了。 这次先说一个简单的，右值引用。 关于引</description>
    </item>
    
    <item>
      <title>Lib和Dll的那点事</title>
      <link>https://cppfans.org/1394.html</link>
      <pubDate>Thu, 01 Nov 2012 01:40:41 +0000</pubDate>
      
      <guid>https://cppfans.org/1394.html</guid>
      <description>搞程序开发的朋友应该对Lib和Dll很熟悉，对于这两个东西，可谓是几家欢喜几家忧，喜欢的人觉得它可以封装代码，避免别人剽窃，不喜欢的人觉得它</description>
    </item>
    
    <item>
      <title>HTTP请求中GET和POST的分析</title>
      <link>https://cppfans.org/1391.html</link>
      <pubDate>Sat, 27 Oct 2012 03:00:45 +0000</pubDate>
      
      <guid>https://cppfans.org/1391.html</guid>
      <description>近期一位朋友想写iOS上的应用，打算从微博应用做起，第一步先做一个微博客户端出来，然后做一个手机微博应用出来，具体做什么还不甚清楚，其实是在</description>
    </item>
    
    <item>
      <title>如何增加博客的订阅量？</title>
      <link>https://cppfans.org/1389.html</link>
      <pubDate>Thu, 25 Oct 2012 01:00:08 +0000</pubDate>
      
      <guid>https://cppfans.org/1389.html</guid>
      <description>订阅服务是如今各个网站都会增加的一个功能，他可以使读者第一时间获得订阅网站的新内容，同时好的订阅方式会让留住一大批读者和用户。国内主要提供订</description>
    </item>
    
    <item>
      <title>坚持写博客，即使你不擅长</title>
      <link>https://cppfans.org/1387.html</link>
      <pubDate>Tue, 23 Oct 2012 14:01:06 +0000</pubDate>
      
      <guid>https://cppfans.org/1387.html</guid>
      <description>前几天看到了伯乐在线翻译的《开发者拒绝写技术博客的常见理由》，里面列举了一些开发者不愿意写博客的原因。 1.我不是这方面的专家，我写的东西不权</description>
    </item>
    
    <item>
      <title>分享仿异次元百度分享工具条</title>
      <link>https://cppfans.org/1385.html</link>
      <pubDate>Sat, 20 Oct 2012 10:07:31 +0000</pubDate>
      
      <guid>https://cppfans.org/1385.html</guid>
      <description>现在做网站一个社会化分享工具还是很有必要的，百度在不久前提供了百度分享功能，据说这个功能会让百度更加青睐你的网站。百度提供的分享工具条样式比</description>
    </item>
    
    <item>
      <title>Windows平台下如何检测C/C&#43;&#43;内存泄露？</title>
      <link>https://cppfans.org/1381.html</link>
      <pubDate>Sun, 14 Oct 2012 11:02:11 +0000</pubDate>
      
      <guid>https://cppfans.org/1381.html</guid>
      <description>对于C/C++程序员来说，效率和优雅性大多数情况是对立的，我们经常会在这里面抉择，到底应该怎么取舍。而说到效率，就不得不说让这类程序员头疼了</description>
    </item>
    
    <item>
      <title>几款好的图床介绍！</title>
      <link>https://cppfans.org/1375.html</link>
      <pubDate>Mon, 08 Oct 2012 12:49:17 +0000</pubDate>
      
      <guid>https://cppfans.org/1375.html</guid>
      <description>我们这些写博客或者做论坛的站长可能会经常因为没有大的网站空间而发愁，因为没钱换大的空间，所以如果是经常文章中会插入一些图片的朋友就会费尽心思</description>
    </item>
    
    <item>
      <title>[PC技术]硬盘从IDE修改为AHCI模式后蓝屏如何处理？</title>
      <link>https://cppfans.org/1369.html</link>
      <pubDate>Sat, 29 Sep 2012 01:35:53 +0000</pubDate>
      
      <guid>https://cppfans.org/1369.html</guid>
      <description>这几天将win7换到了64位下，本来想虚拟机装Mac，结果CPU因为不支持VT，所以就作罢了，不想折腾VMware了，太麻烦了。当时磁盘换到</description>
    </item>
    
    <item>
      <title>[源代码]Nana GUI示例代码</title>
      <link>https://cppfans.org/1368.html</link>
      <pubDate>Tue, 25 Sep 2012 01:22:08 +0000</pubDate>
      
      <guid>https://cppfans.org/1368.html</guid>
      <description>关于nana的介绍，可以查看《[GUI]nana GUI初尝试》，本文主要是分享其中UI的实现代码。 #include &amp;lt;tchar.h&amp;gt; #include &amp;lt;Windows.h&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;nana/gui/wvl.hpp&amp;gt; #include &amp;lt;nana/gui/basis.hpp&amp;gt; #include &amp;lt;nana/gui/widgets/label.hpp&amp;gt; #include &amp;lt;nana/gui/widgets/textbox.hpp&amp;gt; #include &amp;lt;nana/gui/widgets/combox.hpp&amp;gt; #include &amp;lt;nana/gui/widgets/button.hpp&amp;gt; #include &amp;lt;nana/paint/image.hpp&amp;gt; #include</description>
    </item>
    
    <item>
      <title>[GUI]nana GUI初尝试</title>
      <link>https://cppfans.org/1364.html</link>
      <pubDate>Tue, 18 Sep 2012 15:36:59 +0000</pubDate>
      
      <guid>https://cppfans.org/1364.html</guid>
      <description>前几天群里讨论GUI的时候大家各抒己见，提出了一些非常好的GUI工具和代码，大部分都是已经用过的，比如MFC，Qt，DirectUI等等，不</description>
    </item>
    
    <item>
      <title>请理性爱国，理性表达你的保钓思想</title>
      <link>https://cppfans.org/1363.html</link>
      <pubDate>Sat, 15 Sep 2012 09:47:09 +0000</pubDate>
      
      <guid>https://cppfans.org/1363.html</guid>
      <description>最近炒得很热的事件就是中日争夺钓鱼岛了，首先声明，钓鱼岛是属于中国人民的，而井空是属于全世界人民的。保钓事件从一开始的两国争纷到现在双方局势</description>
    </item>
    
    <item>
      <title>解决Ubuntu下输入法不显示问题</title>
      <link>https://cppfans.org/1360.html</link>
      <pubDate>Sat, 08 Sep 2012 17:07:32 +0000</pubDate>
      
      <guid>https://cppfans.org/1360.html</guid>
      <description>ubuntu下的默认输入法是ibus，还有一个sunpinyin，个人觉得ibus已经不比任何国内的输入法差了，词组很精确，非常完美。 那天遇</description>
    </item>
    
    <item>
      <title>Ubuntu12.04LTS下如何安装和彻底卸载xfce4？</title>
      <link>https://cppfans.org/1356.html</link>
      <pubDate>Sat, 08 Sep 2012 16:14:48 +0000</pubDate>
      
      <guid>https://cppfans.org/1356.html</guid>
      <description>今天将Ubuntu12.04更新完了，用的网易的源，更新速度还是很给力的，平均500多K的下载速度。发现虚拟机上unity界面还是比较卡的，</description>
    </item>
    
    <item>
      <title>vmvare虚拟机下的Ubuntu如何设置设置无线联网？</title>
      <link>https://cppfans.org/1354.html</link>
      <pubDate>Fri, 07 Sep 2012 17:01:38 +0000</pubDate>
      
      <guid>https://cppfans.org/1354.html</guid>
      <description>今天晚上突然心血来潮，想更新一下很久不用的Ubuntu系统，因为已经到了12.04LTS版本了，打开vmvare启动电源后发现网络都无法连接</description>
    </item>
    
    <item>
      <title>[源码分享]Windows下的半自动线程锁</title>
      <link>https://cppfans.org/1350.html</link>
      <pubDate>Wed, 29 Aug 2012 14:44:46 +0000</pubDate>
      
      <guid>https://cppfans.org/1350.html</guid>
      <description>写在前面的话：开始写一套网络库，打算先用IOCP吧，Asio毕竟还在学习阶段，定义名字为FreeNet，会慢慢放出来代码的，希望大家持续关注</description>
    </item>
    
    <item>
      <title>[网络开发]boost::asio简介</title>
      <link>https://cppfans.org/1348.html</link>
      <pubDate>Sun, 26 Aug 2012 14:29:21 +0000</pubDate>
      
      <guid>https://cppfans.org/1348.html</guid>
      <description>boost前几天发布了1.51版本，更新内容请查看：http://www.boost.org/users/history/version_1</description>
    </item>
    
    <item>
      <title>浅谈国产游戏业的问题——到底是谁玩了谁？</title>
      <link>https://cppfans.org/1342.html</link>
      <pubDate>Sun, 15 Jul 2012 14:29:32 +0000</pubDate>
      
      <guid>https://cppfans.org/1342.html</guid>
      <description>最近由于项目内的一些策划内容的调整，导致玩家大面积流失，针对最近的这些问题，思考了一下国内现在游戏行业存在的弊端，大家就当一篇杂谈，看看就好</description>
    </item>
    
    <item>
      <title>[网络开发]RakNet翻译文档(6)——Bitstream</title>
      <link>https://cppfans.org/1335.html</link>
      <pubDate>Sun, 10 Jun 2012 09:09:37 +0000</pubDate>
      
      <guid>https://cppfans.org/1335.html</guid>
      <description>Bitstream概述 Bitstream类是一个RakNet命名空间下的helper类，是一个用于打包、解包bits的动态数组。它有如下四个</description>
    </item>
    
    <item>
      <title>[网络开发]RakNet翻译文档(5)——SystemAddress</title>
      <link>https://cppfans.org/1333.html</link>
      <pubDate>Sat, 02 Jun 2012 15:14:41 +0000</pubDate>
      
      <guid>https://cppfans.org/1333.html</guid>
      <description>什么是系统地址？ 系统地址是网络中包含系统二进制IP地址和端口的结构体。这个结构体定义在RakNetTypes.h文件中，这里有一些你需要的系</description>
    </item>
    
    <item>
      <title>[网络开发]RakNet翻译文档(4)——Recieving Packets</title>
      <link>https://cppfans.org/1322.html</link>
      <pubDate>Sun, 20 May 2012 13:30:09 +0000</pubDate>
      
      <guid>https://cppfans.org/1322.html</guid>
      <description>抱歉这篇文章出现这么迟。 当一个数据包出现在网络上的时候，例如收到了返回值不为零的数据，涉及了三个步骤来处理它。 1.确定这个数据包的类型，它通</description>
    </item>
    
    <item>
      <title>又一次最近总结</title>
      <link>https://cppfans.org/1318.html</link>
      <pubDate>Tue, 15 May 2012 14:28:18 +0000</pubDate>
      
      <guid>https://cppfans.org/1318.html</guid>
      <description>上次总结是在年底，这次总结貌似来的有点快，只是最近有点不太顺利而已，所以就发发感慨。最近犯的错误不大不小，但是影响面比较大，对外网玩家造成了</description>
    </item>
    
    <item>
      <title>Windows下如何编译使用boost？</title>
      <link>https://cppfans.org/1317.html</link>
      <pubDate>Mon, 07 May 2012 16:25:27 +0000</pubDate>
      
      <guid>https://cppfans.org/1317.html</guid>
      <description>&lt;p&gt;最近在看boost::asio的东西，所以必须要用到boost库，下载了一个，所以与大家分享下boost库的编译方法。&lt;/p&gt;

&lt;p&gt;本方法应该适用于boost的任何版本，应该适用于任何C++编译器(VC6.0可能对某些库不支持，因为模板的原因)，因为Linux没怎么用，所以只是分享下windows上的编译方法。&lt;/p&gt;

&lt;p&gt;1.下载boost&lt;/p&gt;

&lt;p&gt;从boost官网( &lt;a href=&#34;http://www.boost.org&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; &gt;&lt;a href=&#34;http://www.boost.org&#34;&gt;http://www.boost.org&lt;/a&gt;&lt;/a&gt; )上下载最新的boost版本，现在最新是1.49版本，解压到自定义目录(为了后面好说明，这里假设为boost_1_49)&lt;/p&gt;

&lt;p&gt;2.编译安装boost&lt;/p&gt;

&lt;p&gt;boost_1_49目录下会有一个bootstrap.bat批处理，可以直接点击它，会在 boost_1_49\tools\build\v2 文件夹下生成两个exe，b2.exe；bjam.exe，拷贝这两个文件到boost_1_49目录下。从cmd命令进入到boost_1_49路径下，如果你不知道如何编译，可以输入&amp;ndash;help查看命令行帮助。&lt;/p&gt;

&lt;p&gt;输入如下命令：&lt;/p&gt;

&lt;pre class=&#34;lang:sh decode:true crayon-selected&#34;&gt;b2 toolset=msvc-10.0 --layout=versioned architecture=x86 address-model=64
link=static variant=debug,release threading=multi runtime-link=static 
--without-python --without-mpi --without-wave --without-graph 
--without-math --without-serialization stage&lt;/pre&gt;

&lt;p&gt;使用不同的命令对你使用boost也会产生很大的影响，因为CPU速度和硬盘现在都已经不是大问题了，所以本例中选择了除了不必要库的完全编译，当然了，你时间够，硬盘够，可以完全编译&lt;/p&gt;

&lt;pre class=&#34;lang:sh decode:true&#34;&gt;b2 --toolset=msvc-10 --build-type=complete&lt;/pre&gt;

&lt;p&gt;解释完以上的命令后，再说完全编译的后果。&lt;/p&gt;

&lt;p&gt;1.toolset：表示编译器工具，我安装的是VS2010，所以是msvc-10(如果你是VS2005，可以使用msvc-8.0 VS2008是msvc-9.0)&lt;/p&gt;

&lt;p&gt;2.architecture：表示架构，也就是你的CPU架构，x86,x64，因为我安装的是win7 32位，所以使用了x86的架构&lt;/p&gt;

&lt;p&gt;3.instruction-set：表示指令集，依然是8086指令集&lt;/p&gt;

&lt;p&gt;4.address-model：表示地址长度为32位&lt;/p&gt;

&lt;p&gt;5.link：表示生成动态/静态链接库，动态链接库是shared，静态链接库是static，一般都会编译成静态库，因为给出程序的时候打包boost的库会非常庞大&lt;/p&gt;

&lt;p&gt;6.variant：表示生成的Debug或者release版本，一般情况下会两种版本都会编译出来的&lt;/p&gt;

&lt;p&gt;7.threading：表示单/多线程编译，一般我们的程序都会用到多线程，所以选择了multi&lt;/p&gt;

&lt;p&gt;8.runtime-link：表示动态/静态链接C/C++运行时库(C/C++ Runtime)，我们选择了动态链接&lt;/p&gt;

&lt;p&gt;9.without/with：表示不需要编译/需要编译哪些库，一些自己不用的库可以无需编译&lt;/p&gt;

&lt;p&gt;10.stage/install：stage表示只生成库文件(DLL和Lib)，install还会生成包含头文件的include目录，推荐使用stage，因为boost_1_49\boost中就是boost库完整的头文件，所以无需再拷贝一份出来。编译出来的库会放在stage文件夹中&lt;/p&gt;

&lt;p&gt;这样一份完整的boost库就生成了，剩下就是直接使用到项目中了。&lt;/p&gt;

&lt;p&gt;上面的编译指令可以存成一个批处理，这样进入到boost_1_49目录后，只需要执行批处理就可以了，更方便。&lt;/p&gt;

&lt;p&gt;(现在看到为什么不推荐使用完全编译了吧，因为完全编译会编译出各种组合的所有情况，需要占用更多的空间和时间，所以建议各位朋友还是放弃了吧)&lt;/p&gt;

&lt;p&gt;使用的时候可以直接包含到项目中，然后在对应的文件中包含相应的头文件即可，例如&lt;/p&gt;

&lt;pre class=&#34;lang:c++ decode:true&#34;&gt;#include &#34;boost/asio.hpp&#34;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>[开发工具]详解Visual Stdio之编译后事件</title>
      <link>https://cppfans.org/1315.html</link>
      <pubDate>Sun, 06 May 2012 07:12:33 +0000</pubDate>
      
      <guid>https://cppfans.org/1315.html</guid>
      <description>用VS做开发，通常最痛苦的事情就是配置工程了，建各种目录结构，加入各种库头文件和Lib，输出路径，编译后事件等等，说起来都很麻烦。 今天主要想</description>
    </item>
    
    <item>
      <title>[网络开发]RakNet文档翻译(3)——Creating Packets</title>
      <link>https://cppfans.org/1314.html</link>
      <pubDate>Sat, 05 May 2012 17:40:55 +0000</pubDate>
      
      <guid>https://cppfans.org/1314.html</guid>
      <description>如何将你的数据编码到一个数据包中？ 运行RakNet的系统通过人们所熟知的数据包进行通讯，实际上所有在Internet上运行的系统都如此。更准</description>
    </item>
    
    <item>
      <title>[网络开发]RakNet文档翻译(2)——Connecting</title>
      <link>https://cppfans.org/1299.html</link>
      <pubDate>Sun, 15 Apr 2012 14:37:29 +0000</pubDate>
      
      <guid>https://cppfans.org/1299.html</guid>
      <description>Connecting to other systems &amp;nbsp; 找到连接的对象 下面是5种连接到其他系统的方法： 1.直接通过IP地址(前提是你已经知道该IP) 2.LAN广播 3.使用云服务器或者云客</description>
    </item>
    
    <item>
      <title>[源码分享]Aion模拟器</title>
      <link>https://cppfans.org/1294.html</link>
      <pubDate>Sun, 15 Apr 2012 06:32:14 +0000</pubDate>
      
      <guid>https://cppfans.org/1294.html</guid>
      <description>永恒之塔游戏介绍： 通向Abyss世界的“永恒之塔”被强大的恶魔打开，囚禁在Abyss世界的龙类被唤醒，开始了它们对世界的报复。一场围绕在天使</description>
    </item>
    
    <item>
      <title>[网络开发]IOCP完整例子</title>
      <link>https://cppfans.org/1267.html</link>
      <pubDate>Mon, 09 Apr 2012 13:49:02 +0000</pubDate>
      
      <guid>https://cppfans.org/1267.html</guid>
      <description>本文是我在学习IOCP的时候，第一次写一个完整的例子出来，当然了，参考了CSDN上一些朋友的博客，大部分都是按照他们的思路写的，毕竟我是初学</description>
    </item>
    
    <item>
      <title>[网络开发]Raknet文档翻译(1)——Startup</title>
      <link>https://cppfans.org/1239.html</link>
      <pubDate>Sun, 08 Apr 2012 11:05:05 +0000</pubDate>
      
      <guid>https://cppfans.org/1239.html</guid>
      <description>开始Raknet [cpp] StartupResult RakPeer::Startup( unsigned short maxConnections, SocketDescriptor * socketDescriptors,unsigned socketDescriptorCount, int threadPriority ); [/cpp] 第一件你应该做的事情是调用RakpeerInterface::StartUp()函数，Start</description>
    </item>
    
    <item>
      <title>网络编程系列文章声明</title>
      <link>https://cppfans.org/1237.html</link>
      <pubDate>Sat, 07 Apr 2012 12:09:07 +0000</pubDate>
      
      <guid>https://cppfans.org/1237.html</guid>
      <description>最近一段也算稍微闲下来了，至少没以前那么忙了，对于以前没有写完的raknet的文章开始继续写了。而对于IOCP方面的东西，还在研究，已经参考</description>
    </item>
    
    <item>
      <title>[源代码]如何删除svn版本控制文件夹</title>
      <link>https://cppfans.org/1212.html</link>
      <pubDate>Sat, 31 Mar 2012 13:35:51 +0000</pubDate>
      
      <guid>https://cppfans.org/1212.html</guid>
      <description>许多时候，我们拿到的代码都是带有版本控制文件的，比如说.svn文件夹，这些文件非常大， 占用了很多硬盘，但是自己删除也很慢，工具下来也不好用，</description>
    </item>
    
    <item>
      <title>《水浒无双》内测继续开启，欢迎大家试玩</title>
      <link>https://cppfans.org/1202.html</link>
      <pubDate>Wed, 28 Mar 2012 16:08:04 +0000</pubDate>
      
      <guid>https://cppfans.org/1202.html</guid>
      <description>今天是《水浒无双》内测第一天，总体效果来说还不错，今天大家都很给力，没出什么问题，也算是对玩家的一个交代吧，希望大家继续支持《水浒无双》。 今</description>
    </item>
    
    <item>
      <title>[软件]如何使用分布式版本控制工具Git？</title>
      <link>https://cppfans.org/1198.html</link>
      <pubDate>Sun, 25 Mar 2012 16:10:00 +0000</pubDate>
      
      <guid>https://cppfans.org/1198.html</guid>
      <description>Git是一个由林纳斯·托瓦兹为了更好地管理linux内核开发而创立的分布式版本控制／软件配置管理软件。需要注意的是和GNU Interactive Tools，一个</description>
    </item>
    
    <item>
      <title>C&#43;&#43;使用MySql&#43;&#43;操作数据库实例</title>
      <link>https://cppfans.org/1117.html</link>
      <pubDate>Sun, 04 Mar 2012 14:30:34 +0000</pubDate>
      
      <guid>https://cppfans.org/1117.html</guid>
      <description>有朋友让帮忙写个C++修改数据库中用户名密码的工具，因为他是做VPN的，要给很多客户端展示访问速度等，有一个固定的用户名来展示，但是每次给用</description>
    </item>
    
    <item>
      <title>[编程工具]CppCheck代码检测工具</title>
      <link>https://cppfans.org/1101.html</link>
      <pubDate>Sun, 26 Feb 2012 11:27:15 +0000</pubDate>
      
      <guid>https://cppfans.org/1101.html</guid>
      <description>我们在写代码的时候通常会犯两样低级错误，这种低级错误和那种低级错误。在编译的时候可能不会报错，但是在程序运行的时候就会发现很奇怪的结果，莫名</description>
    </item>
    
    <item>
      <title>IOCP浅析[二]——IOCP出现的意义和函数接口</title>
      <link>https://cppfans.org/1089.html</link>
      <pubDate>Sun, 19 Feb 2012 14:14:00 +0000</pubDate>
      
      <guid>https://cppfans.org/1089.html</guid>
      <description>上一篇《IOCP浅析》中翻翻的谈了一下IOCP的简单含义，这篇稍微深入讨论下IOCP到底有什么好的，让大家将他推向神坛，同时简单的讨论下基本</description>
    </item>
    
    <item>
      <title>博客再次更新主题，希望大家不会烦</title>
      <link>https://cppfans.org/1077.html</link>
      <pubDate>Tue, 14 Feb 2012 13:21:53 +0000</pubDate>
      
      <guid>https://cppfans.org/1077.html</guid>
      <description>上个星期折腾博客到wp3.3.1版本，结果发现喜欢的主题不能用，所以昨天晚上思前想后，决定将博客的版本降下去，幸好数据库没有改动，否则还真是</description>
    </item>
    
    <item>
      <title>WordPress修改主题后无法正常显示页面解决方法</title>
      <link>https://cppfans.org/1066.html</link>
      <pubDate>Sun, 05 Feb 2012 08:31:55 +0000</pubDate>
      
      <guid>https://cppfans.org/1066.html</guid>
      <description>下午看到一个挺漂亮的主题，下载来想试用下看看效果，结果却导致我的前台页面无法正常显示，成白板儿了，这下郁闷了，难道又要折腾了，悲剧，不过想起</description>
    </item>
    
    <item>
      <title>最近情况说明</title>
      <link>https://cppfans.org/1061.html</link>
      <pubDate>Thu, 02 Feb 2012 15:41:53 +0000</pubDate>
      
      <guid>https://cppfans.org/1061.html</guid>
      <description>虽然说这周是上班的第一周，但是的确非常忙，显示服务器莫名的国家信息没有入库，导致国王战无效，部分帮会数据没有入库，总之一团糟糕，查了所有的L</description>
    </item>
    
    <item>
      <title>IOCP浅析</title>
      <link>https://cppfans.org/1054.html</link>
      <pubDate>Mon, 16 Jan 2012 14:44:14 +0000</pubDate>
      
      <guid>https://cppfans.org/1054.html</guid>
      <description>这一年半来一直在做游戏项目逻辑层，学会了不少东西，觉得自己应该看看服务器底层的东西了，主要的东西就是网络模块，网络模块是沿用以前项目的，在 我</description>
    </item>
    
    <item>
      <title>2011年小结</title>
      <link>https://cppfans.org/1051.html</link>
      <pubDate>Sun, 08 Jan 2012 13:40:27 +0000</pubDate>
      
      <guid>https://cppfans.org/1051.html</guid>
      <description>周五晚上公司开了年会，突然发现2011年已经结束了，年会上大家都很开心，很幸运的获得一个奖品——iPod shuffle，还是我们头抽中的，看</description>
    </item>
    
    <item>
      <title>简单的模拟多线程引用计数原理</title>
      <link>https://cppfans.org/1033.html</link>
      <pubDate>Sun, 18 Dec 2011 08:08:28 +0000</pubDate>
      
      <guid>https://cppfans.org/1033.html</guid>
      <description>大家都知道多线程编程学习中有一个很重要的东西——引用计数，一个线程的生或死或运行状态都跟这个计数有关，他同样是在适当的时候加加减减的。这篇文</description>
    </item>
    
    <item>
      <title>[网络开发]ZeroMQ初体验——hello world</title>
      <link>https://cppfans.org/1018.html</link>
      <pubDate>Sun, 27 Nov 2011 10:02:43 +0000</pubDate>
      
      <guid>https://cppfans.org/1018.html</guid>
      <description>群里最近在说网络库的东西，群主推荐说可以看看ØMQ，说非常精简，而且支持多种语言，非常高效率，于是下载来看看。 ØMQ官网 www.zeromq.org Guide还没看完</description>
    </item>
    
    <item>
      <title>关于11.21博客访问异常的说明</title>
      <link>https://cppfans.org/1011.html</link>
      <pubDate>Mon, 21 Nov 2011 15:21:19 +0000</pubDate>
      
      <guid>https://cppfans.org/1011.html</guid>
      <description>今天打开博客发现速度很慢，而且有几率打不开，ping了一下发现丢包很严重，与IDC说了下，原来是37段内的主机均出现大量丢包的问题，估计是出</description>
    </item>
    
    <item>
      <title>VMware下Fedora16不能全屏的简易解决办法</title>
      <link>https://cppfans.org/1009.html</link>
      <pubDate>Sat, 19 Nov 2011 06:23:15 +0000</pubDate>
      
      <guid>https://cppfans.org/1009.html</guid>
      <description>虚拟了Fedora之后，发现桌面并不能全屏，查了查vmware提供的帮助，大致是需要下载vmware tools然后挂载安装调整配置这种方法，</description>
    </item>
    
    <item>
      <title>[转]现代C&#43;&#43;风格的新元素</title>
      <link>https://cppfans.org/1003.html</link>
      <pubDate>Wed, 16 Nov 2011 15:21:18 +0000</pubDate>
      
      <guid>https://cppfans.org/1003.html</guid>
      <description>****“C++11就像一门新的语言。” – Bjarne Stroustrup C++11标准推出了很多有用的新特性。本文特别关注相比C++98更像是一门新语言的那部分特性，</description>
    </item>
    
    <item>
      <title>[加密解密]使用CryptoAPI进行文件加密解密——源码</title>
      <link>https://cppfans.org/985.html</link>
      <pubDate>Mon, 07 Nov 2011 15:11:29 +0000</pubDate>
      
      <guid>https://cppfans.org/985.html</guid>
      <description>前一篇简单介绍了下CryptoAPI的东西，这篇就将那点代码放出来给大家看看，以作交流参考目的。 [cpp] /************************ FileName:CryptoDefine.h Author :eliteYang Mail :elite_yang@163.com Desc :加密需要的常量定义 ************************/ #ifndef __CRYPTO_DEFINE_H_ #define</description>
    </item>
    
    <item>
      <title>[加密解密]CryptoAPI简介</title>
      <link>https://cppfans.org/911.html</link>
      <pubDate>Mon, 07 Nov 2011 14:29:52 +0000</pubDate>
      
      <guid>https://cppfans.org/911.html</guid>
      <description>帮那个小朋友写加密工具也写完了，用的是微软的CryptAPI库，支持的加密方式挺多的，最坑爹的是他们老师让做加密与解密，结果加密方式是MD5</description>
    </item>
    
    <item>
      <title>博客更新主题通知！</title>
      <link>https://cppfans.org/962.html</link>
      <pubDate>Sat, 05 Nov 2011 15:30:57 +0000</pubDate>
      
      <guid>https://cppfans.org/962.html</guid>
      <description>今天本博客更换了一套很素的主题，原先的热点新闻apple主题，也非常好看，但是看着太眼花缭乱了，觉得有点乱，所以换上了现在这套主题。 SimplePro-TT 作者为</description>
    </item>
    
    <item>
      <title>MFC控件 void DrawItem(LPDRAWITEMSTRUCT) 	{ ASSERT(FALSE); }</title>
      <link>https://cppfans.org/921.html</link>
      <pubDate>Fri, 04 Nov 2011 13:25:42 +0000</pubDate>
      
      <guid>https://cppfans.org/921.html</guid>
      <description>今天帮一位小朋友写加密工具的时候，突然发现许久不用的MFC特生疏，控件函数都忘干净了，在查的基础上，勉强写了一个工具出来，挺简陋的，接个图给</description>
    </item>
    
    <item>
      <title>RakNet简单应用——hello World(服务器端)</title>
      <link>https://cppfans.org/901.html</link>
      <pubDate>Sun, 23 Oct 2011 14:32:16 +0000</pubDate>
      
      <guid>https://cppfans.org/901.html</guid>
      <description>我们学习很多编程语言的时候都是从Hello world开始的，所以这次我们也打算开始从hello world写起，不过本文只写了服务器端，客户端</description>
    </item>
    
    <item>
      <title>初识RakNet (RakNet第二篇)</title>
      <link>https://cppfans.org/881.html</link>
      <pubDate>Wed, 12 Oct 2011 16:35:12 +0000</pubDate>
      
      <guid>https://cppfans.org/881.html</guid>
      <description>上篇文章简单介绍了一下RakNet，现在我们初步的认识一下RakNet。 前面发的文章中有RakNet的压缩包，解压之后我们会看到RakNet</description>
    </item>
    
    <item>
      <title>关于留言和交换链接事项的说明！</title>
      <link>https://cppfans.org/879.html</link>
      <pubDate>Wed, 12 Oct 2011 14:33:29 +0000</pubDate>
      
      <guid>https://cppfans.org/879.html</guid>
      <description>最近留言内容中的垃圾信息越来越多，都是博客留言软件自动发的，觉得很烦，幸好有 Akismet 插件过滤垃圾内容，所以说明一下，如果你是真的留言想说点什么，请</description>
    </item>
    
    <item>
      <title>RakNet简单介绍，最新版本分享</title>
      <link>https://cppfans.org/877.html</link>
      <pubDate>Tue, 11 Oct 2011 14:58:37 +0000</pubDate>
      
      <guid>https://cppfans.org/877.html</guid>
      <description>前一阵简单的看了看RakNet的东西，觉得挺好用，想写一点东西给大家分享，还是从最基础的讲起吧，虽然有点俗套，不过真不知道怎么写这些东西，各</description>
    </item>
    
    <item>
      <title>祝大家国庆快乐!</title>
      <link>https://cppfans.org/849.html</link>
      <pubDate>Fri, 30 Sep 2011 15:10:33 +0000</pubDate>
      
      <guid>https://cppfans.org/849.html</guid>
      <description>明天就是国庆节了，可能很多人在加班，很多人已经到家了，可能还有很多人在归家的旅途上，不管您现在是什么状态，先跟大家说一声国庆快乐，有时间就回</description>
    </item>
    
    <item>
      <title>[转]为什么中国的程序员技术偏低</title>
      <link>https://cppfans.org/784.html</link>
      <pubDate>Sat, 17 Sep 2011 11:40:15 +0000</pubDate>
      
      <guid>https://cppfans.org/784.html</guid>
      <description>首先来说一个高级程序员并非靠自己读几本书写几万行代码就能练就的，我更关注于低层的环境，也就是程序员实实在在的工作环境。因为程序员的高低还得 从</description>
    </item>
    
    <item>
      <title>生日纪念</title>
      <link>https://cppfans.org/769.html</link>
      <pubDate>Tue, 06 Sep 2011 18:12:31 +0000</pubDate>
      
      <guid>https://cppfans.org/769.html</guid>
      <description>近两天来很多朋友打电话，发短信，QQ留言，微博留言等方式纷纷发来对我的生日祝福，对这些朋友和兄弟都非常感谢，希望你们每天也都顺利，工作上争取</description>
    </item>
    
    <item>
      <title>博客100篇文章纪念</title>
      <link>https://cppfans.org/765.html</link>
      <pubDate>Sat, 03 Sep 2011 17:44:45 +0000</pubDate>
      
      <guid>https://cppfans.org/765.html</guid>
      <description>开始写这个博客已经快一年了，工作忙的缘故，写的文章也没多少，最近刚刚看到文章统计有100篇文章了，特此写个小文纪念一下，也没写多少东西给大家</description>
    </item>
    
    <item>
      <title>本次开放测试卡建号问题分析——MySQL配置优化方法</title>
      <link>https://cppfans.org/712.html</link>
      <pubDate>Sun, 21 Aug 2011 09:51:29 +0000</pubDate>
      
      <guid>https://cppfans.org/712.html</guid>
      <description>&lt;p&gt;本次的开放测试依然在进行中，昨天关于卡建号的问题大家讨论了一下解决办法，对逻辑方面也检查了一下，不过逻辑方面很久都没人改过了，如果出问题应该两个项目都出问题，结果另外一个从来不卡的，所以应该不是逻辑上的问题，结果去检查MySQL的配置，才发现了原因。&lt;/p&gt;

&lt;p&gt;是MySQL中打Log过于频繁导致的原因，原来的配置是 innodb_flush_log_at_trx_commit = 1，有一条处理就等待写LLog到磁盘，写入磁盘想对耗时比价多，所以非常卡，本次测试参数是1的测试结果是60-90毫秒，修改成2之后，使用客户端创建一个角色的时间是0 ms，用机器人创建1000个角色压力测试的结果是13ms，这个结果还可以接受，1分钟3000多账号，完全可以理解。前面运维测试的时间是200ms一个，所以呢，又被玩家骂了一顿啊，悲惨的命运。&lt;/p&gt;

&lt;p&gt;简单搜了一下MySQL优化的配置给大家分享下：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;my.ini配置建议：&lt;/p&gt;

&lt;p&gt;table_cache=1024&lt;/p&gt;

&lt;p&gt;物理内存越大,设置就越大.默认为2402,调到512-1024最佳&lt;/p&gt;

&lt;p&gt;innodb_additional_mem_pool_size=4M&lt;/p&gt;

&lt;p&gt;默认为2M&lt;/p&gt;

&lt;p&gt;innodb_flush_log_at_trx_commit=1&lt;/p&gt;

&lt;p&gt;(设置为0就是等到innodb_log_buffer_size列队满后再统一储存,默认为1)&lt;/p&gt;

&lt;p&gt;innodb_log_buffer_size=2M&lt;/p&gt;

&lt;p&gt;默认为1M&lt;/p&gt;

&lt;p&gt;innodb_thread_concurrency=8&lt;/p&gt;

&lt;p&gt;你的服务器CPU有几个就设置为几,建议用默认一般为8&lt;/p&gt;

&lt;p&gt;key_buffer_size=256M&lt;/p&gt;

&lt;p&gt;默认为218         调到128最佳&lt;/p&gt;

&lt;p&gt;tmp_table_size=64M&lt;/p&gt;

&lt;p&gt;默认为16M        调到64-256最挂&lt;/p&gt;

&lt;p&gt;read_buffer_size=4M&lt;/p&gt;

&lt;p&gt;默认为64K&lt;/p&gt;

&lt;p&gt;read_rnd_buffer_size=16M&lt;/p&gt;

&lt;p&gt;默认为256K&lt;/p&gt;

&lt;p&gt;sort_buffer_size=32M&lt;/p&gt;

&lt;p&gt;默认为256K&lt;/p&gt;

&lt;p&gt;max_connections=1024&lt;/p&gt;

&lt;p&gt;默认为1210&lt;/p&gt;

&lt;p&gt;thread_cache_size=120&lt;/p&gt;

&lt;p&gt;默认为60&lt;/p&gt;

&lt;p&gt;query_cache_size=32M&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>8.19的开放测试，不好不坏的开场吧</title>
      <link>https://cppfans.org/706.html</link>
      <pubDate>Fri, 19 Aug 2011 17:42:17 +0000</pubDate>
      
      <guid>https://cppfans.org/706.html</guid>
      <description>8.19号项目正式开放测试，准时2点开始，从周四晚上就一直在修问题，主要原因是时间太紧张了，而且有较多的新功能，所以导致一个晚上都在修问题，</description>
    </item>
    
    <item>
      <title>[杂侃]高铁事故系无证程序员Bug所致？？？</title>
      <link>https://cppfans.org/600.html</link>
      <pubDate>Mon, 25 Jul 2011 14:39:01 +0000</pubDate>
      
      <guid>https://cppfans.org/600.html</guid>
      <description>今天网络上突然传出说找到了温州高铁事故的原因找到了，系两名无证程序员写的代码Bug所致。以下是新闻原文： 中新网温州7月25日电(记者 赵晔娇)</description>
    </item>
    
    <item>
      <title>[转]我们需要一种其他人能使用的编程语言</title>
      <link>https://cppfans.org/594.html</link>
      <pubDate>Thu, 21 Jul 2011 15:08:36 +0000</pubDate>
      
      <guid>https://cppfans.org/594.html</guid>
      <description>&lt;p&gt;原作者Chris Tompkins以前是一位记者，此文基本是从一个新手的角度来讨论编程语言。此文在Reddit上的标题很有意思：“新闻记者说编程很难，希望能像买西红柿一样简单”，讨论也很激烈，约500多条评论，其中有不少精彩评论。 最近，我开始从头努力学习Objective-C语言，可是我无法摆脱的事情是：它实在太难了。一位有经验的开发人员可能会嘲笑我讲的这句话，但确实 是这样的。我要坦诚地对待我的教育，微积分II是我学过的最高级别的数学，我在美国加州大学柏克莱分校拿到新闻学的高等学位。我是一个熟练的HTML / CSS开发人员，我能把javascript粘合起来，以解决几乎任何出现的问题。第一次遇到C语言是在一个社区大学中，那时我13岁，我觉得它的语法重 复，并且目标不明确，所以很多年来我总是避开着。&lt;/p&gt;

&lt;p&gt;现在，过了好多年后又尝试要重新学起，你可能会指责我不够努力，但很明显这是不对的——我将继续埋头学习Objective-C语言，直到我能熟练运用它为止。然而，我发现C语言是一种不能扩展学习的语法，背后有着极度复杂的系统。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;复杂性的困扰&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;说C语言太复杂，这是因为它需要非常详细的语法来实现计算机上的所有功能（或可能的功能）。我承认它的特殊性，因为它要跨平台，与多平台的硬件有相互 作用，但学习C语言不是一定要自下而上的。我想按着我的奇思妙想使之进行，我想这样做的并不会只有我一人。我不禁想到由博士创造出的语言竟也会遭受“复杂 性的困扰”。换句话说，那些知道了这一点的人对于简化它并不感兴趣，因为这让他们的知识贬值了。&lt;/p&gt;

&lt;p&gt;编码逐渐成为计算机基础知识的重要组成部分。在当前信息技术如此重要的社会，这种看法是不能持续的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;要是我们有更好的代码杂货店，事情就较为简单了&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;最近，我陪女朋友去杂货店买东西，我们在一堆堆的新鲜水果和蔬菜中翻找着做饭要用到的所有材料。这个情景使我想到，为什么编码不能更像这样一点？我 想，要更像是在挑选做饭用到的材料。学习C语言就像在学习西红柿的基因序列一样。要长出西红柿当然需要有基因序列，可是要把它切片以及加入我的材料清单 中，我并不需要熟悉它。这超出了准备一餐饭菜所需要知道的常识。&lt;/p&gt;

&lt;p&gt;最重要的是，如果每个想成为厨师的人，在做一餐饭菜时都需要知道一份番茄的基因序列，那么他们可能就永远都不会抽空出来做饭了。事实上，他们当然不会是一位非常成功的基因学家，所以他们就更可能永远也不会成为一名厨师。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;没有足够的库、基础代码、以及其他合适的代码聚集地&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;我所说的是并不是新时代中的一些Visual Basic程序或C语言的一个WYSIWYG程序，而是一种自然语言的语法，它通过调用C语言的对象库来使其简单易学。&lt;/p&gt;

&lt;p&gt;编注：WYSIWYG，是“what you see is what you get”的缩写，即“所见即所得”。&lt;/p&gt;

&lt;p&gt;因为电脑程序日益成为人们日常生活中不可缺少的一部分，我们需要帮助孩子学习代码，这将使他们受益终生。可是强制他们学习高级别级的数学技巧和晦涩的 计算机语言（用“*”表示指针，“.”缩写语法）是不现实的。这使拥有好奇心的小孩学不到基本的技能，阻碍了他们为以后要学习的多变量微积分打好基础。与 此同时，其余的人能够受益于一个程序设计语言，他们不需要花几年的时间去学习。简而言之，我们需要有一种语言，它能够让那些数学领域的门外汉懂得使用；它 包含有更自然的语法（是的，这是有可能的）；它使得初级开发人员不需用到规模庞大的术语库就能为其定义和编写脚本。你知道在所有的各种C语言的分支所使用 的方法调用机制的数量吗？&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;让代码尽可能简单，对于我们中其余的人来说是一种仁慈&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;可以把复杂的C语言分支机构可以浓缩成一系列的目对象吗？——这些对象可以用自然语言串联到一起。我是这样认为的，可是目前这远远超出我的能力范围。 我知道我们不能继续使编程语言日趋复杂下去，否则，它最终会变得过于复杂，只有最专业的用户才能使用。这个人造壁垒，将阻碍几千甚至几百万的人的声音得以 实现。&lt;/p&gt;

&lt;p&gt;译文出处：&lt;a href=&#34;http://www.jobbole.com/&#34; target=&#34;_blank&#34;  rel=&#34;nofollow&#34; &gt;伯乐&lt;/a&gt;在线 - &lt;a href=&#34;http://www.jobbole.com/blog.php&#34; target=&#34;_blank&#34;  rel=&#34;nofollow&#34; &gt;职场&lt;/a&gt;&lt;a href=&#34;http://www.jobbole.com/blog.php/287&#34; target=&#34;_blank&#34;  rel=&#34;nofollow&#34; &gt;博客&lt;/a&gt; - &lt;a href=&#34;http://www.jobbole.com/blog.php/287&#34; target=&#34;_blank&#34;  rel=&#34;nofollow&#34; &gt;程序员&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;译文链接：&lt;a href=&#34;http://www.jobbole.com/entry.php/1124&#34; target=&#34;_blank&#34;  rel=&#34;nofollow&#34; &gt;&lt;a href=&#34;http://www.jobbole.com/entry.php/1124&#34;&gt;http://www.jobbole.com/entry.php/1124&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;原文：&lt;a href=&#34;http://www.leavesofcode.com/2011/06/we-need-programming-language-for-rest.html&#34; target=&#34;_blank&#34;  rel=&#34;nofollow&#34; &gt;Chris Tompkins&lt;/a&gt;　　　翻译：敏捷&lt;a href=&#34;http://www.jobbole.com/blog.php/413&#34; target=&#34;_blank&#34;  rel=&#34;nofollow&#34; &gt;翻译&lt;/a&gt; - &lt;strong&gt;&lt;a href=&#34;http://www.jobbole.com/member.php/3016-%E5%BC%A0%E7%91%9E%E9%9C%9E&#34; target=&#34;_blank&#34;  rel=&#34;nofollow&#34; &gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;张瑞霞&lt;/strong&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[转]可视化的数据结构和算法</title>
      <link>https://cppfans.org/416.html</link>
      <pubDate>Wed, 25 May 2011 17:54:31 +0000</pubDate>
      
      <guid>https://cppfans.org/416.html</guid>
      <description>原文地址：http://coolshell.cn/articles/4671.html 还记得之前发布过的那个关于可视化排序的文章吗？在网上又</description>
    </item>
    
    <item>
      <title>[多图]TortoiseSVN配置管理使用</title>
      <link>https://cppfans.org/349.html</link>
      <pubDate>Sat, 16 Apr 2011 17:44:12 +0000</pubDate>
      
      <guid>https://cppfans.org/349.html</guid>
      <description>本文最开始有我写在锋酷开发社区(www.flycode.org)，现转载过来供大家查看。 一.下载并安装TortoiseSVN程序，点击Nex</description>
    </item>
    
    <item>
      <title>第一个项目《水浒无双》3.25正式封测</title>
      <link>https://cppfans.org/320.html</link>
      <pubDate>Tue, 22 Mar 2011 16:27:52 +0000</pubDate>
      
      <guid>https://cppfans.org/320.html</guid>
      <description>最近一直在忙公司的项目，不过都是瞎忙，没做出来多少东西，万幸这个项目在月底要封测了，封测顶几天，然后就可以休息一阵了。 简单的先说说这个项目，</description>
    </item>
    
    <item>
      <title>【C/C&#43;&#43;】sprintf中如何将容器作为可变参数列表传入</title>
      <link>https://cppfans.org/254.html</link>
      <pubDate>Wed, 02 Mar 2011 16:00:15 +0000</pubDate>
      
      <guid>https://cppfans.org/254.html</guid>
      <description>近日做脚本接口时遇到一个变参的传入接口，因为我们游戏中的脚本系统是自定义的，这个接口的参数因为是可变，所以将参数读进来存入一个Vector容</description>
    </item>
    
    <item>
      <title>最近工作生活的一点小总结</title>
      <link>https://cppfans.org/229.html</link>
      <pubDate>Sat, 26 Feb 2011 10:58:53 +0000</pubDate>
      
      <guid>https://cppfans.org/229.html</guid>
      <description>最近两周工作中，感觉明显状态不行了，每天做的事情都非常少，效率极低，有可能是年前封闭太累了，封闭完之后，直接过年了，所以状态包括身体都感觉比</description>
    </item>
    
    <item>
      <title>【资料分享】网游[天龙八部]源代码分享</title>
      <link>https://cppfans.org/204.html</link>
      <pubDate>Sun, 20 Feb 2011 07:47:48 +0000</pubDate>
      
      <guid>https://cppfans.org/204.html</guid>
      <description>天龙八部这款游戏，从一到二，可谓是改进了很多东西，因为对网游玩的不是很多，所以对其中的特色也就不做介绍了，大家喜欢的话可以亲自去玩玩体验一下</description>
    </item>
    
    <item>
      <title>Lua基础语法</title>
      <link>https://cppfans.org/113.html</link>
      <pubDate>Tue, 04 Jan 2011 16:26:30 +0000</pubDate>
      
      <guid>https://cppfans.org/113.html</guid>
      <description>注释 像我们这样的码农，接触新语言第一个想的肯定是如何打注释，代码写不出来，伪代码总能写的出来一些。Lua中的注释使用两个短线来表示本行以后是</description>
    </item>
    
    <item>
      <title>Lua语言语法讲解的一点准备文章</title>
      <link>https://cppfans.org/107.html</link>
      <pubDate>Mon, 03 Jan 2011 07:55:49 +0000</pubDate>
      
      <guid>https://cppfans.org/107.html</guid>
      <description>(本文主要是对Lua的一点小解释和对后面的准备，如果读者不喜欢，可以略过……) 什么是Lua语言？ Lua是一种轻量语言，它的官方版本只包括一个</description>
    </item>
    
    <item>
      <title>[教程预告]lua系列文章通知</title>
      <link>https://cppfans.org/102.html</link>
      <pubDate>Sun, 02 Jan 2011 14:36:58 +0000</pubDate>
      
      <guid>https://cppfans.org/102.html</guid>
      <description>最近一直在做关于脚本方面的东西，所以就想写一写关于自己对脚本这块东西的小见解。 脚本系统在一个游戏中发挥的作用个人觉得非常巨大，比如游戏中的任</description>
    </item>
    
    <item>
      <title>游戏服务器程序基础1-内存/类型转换/编程习惯</title>
      <link>https://cppfans.org/85.html</link>
      <pubDate>Wed, 29 Dec 2010 04:57:25 +0000</pubDate>
      
      <guid>https://cppfans.org/85.html</guid>
      <description>内存管理方式 游戏服务端的工作主要就是实时的处理用户的逻辑，存取，大量数据包的收发，这其中，网络因素是一个重要的原因，这个东西无法避免，但是更</description>
    </item>
    
    <item>
      <title>游戏开发基础知识2——函数指针</title>
      <link>https://cppfans.org/83.html</link>
      <pubDate>Wed, 29 Dec 2010 04:55:23 +0000</pubDate>
      
      <guid>https://cppfans.org/83.html</guid>
      <description>前面介绍了如何进行模块化以及Lib库的制作，关于库的制作，后面会再次深入讲解的，不过可能会在锋酷开发社区(www.flycode.org)上</description>
    </item>
    
  </channel>
</rss>