<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scala on C&#43;&#43;爱好者博客</title>
    <link>https://cppfans.org/tags/Scala/</link>
    <description>Recent content in Scala on C&#43;&#43;爱好者博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 10 Aug 2016 12:31:10 +0000</lastBuildDate>
    
	<atom:link href="https://cppfans.org/tags/Scala/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A simple Spark test project</title>
      <link>https://cppfans.org/2142.html</link>
      <pubDate>Wed, 10 Aug 2016 12:31:10 +0000</pubDate>
      
      <guid>https://cppfans.org/2142.html</guid>
      <description>I start to learn Spark to process some log files, here is a simple example. How to build Spark, please see http://spark.apache.org/docs/latest/building-spark.html Scala file import org.apache.spark.SparkContext import org.apache.spark.SparkContext._ import org.apache.spark.SparkConf object SimpleApp { def main(args: Array[String]) { val conf = new SparkConf().setAppName(&#34;wordCount&#34;) val sc = new SparkContext(conf) val input = sc.textFile(&#34;/home/nickyang/develop/spark/spark-1.6.1/README.md&#34;) val words = input.flatMap(line =&amp;gt; line.split(&#34; &#34;)) val couts = words.map(word =&amp;gt; (word, 1)).reduceByKey{case (x, y) =&amp;gt; x + y} couts.saveAsTextFile(&#34;/home/nickyang/develop/spark/spark-1.6.1/examples/wordCount/result&#34;) } } sbt file(use sbt to build this example) name := &#34;SampleApp&#34; version := &#34;0.0.1&#34; scalaVersion := &#34;2.10.5&#34; libraryDependencies += &#34;org.apache.spark&#34; %% &#34;spark-core&#34; % &#34;1.6.2&#34; % &#34;provided&#34; sbt package YOUR_SPARK_HOME/bin/spark-submit --class &amp;lt;span class=&#34;s2&#34;&#34;SimpleApp&#34;&amp;lt;/span --master &amp;lt;span class=&#34;nb&#34;local&amp;lt;/span&amp;lt;span class=&#34;o&#34;[&amp;lt;/span1&amp;lt;span class=&#34;o&#34;]&amp;lt;/span target/scala-2.11/sampleapp_2.10-0.0.1.jar The result is in result directory, two files, one is _SUCCESS that tells us the right result, the other one is &amp;ldquo;part-00000&amp;rdquo;, contains words and words&amp;rsquo; count in this</description>
    </item>
    
  </channel>
</rss>